
dimension_source.elf:     file format elf32-littlearm
dimension_source.elf
architecture: armv5te, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x000017ae memsz 0x000017ae flags r-x
    LOAD off    0x00010000 vaddr 0x00400000 paddr 0x00400000 align 2**15
         filesz 0x00000004 memsz 0x0000069c flags rw-
private flags = 5000000: [Version5 EABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 RO_DATA       000017ae  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 RW_DATA       00000004  00400000  00400000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 ZI_DATA       00000698  00400004  00400004  00010004  2**2
                  ALLOC
  3 .comment      00000022  00000000  00000000  00010004  2**0
                  CONTENTS, READONLY
  4 .ARM.attributes 00000027  00000000  00000000  00010026  2**0
                  CONTENTS, READONLY
  5 .debug_info   0000015a  00000000  00000000  0001004d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000006f  00000000  00000000  000101a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_loc    00000087  00000000  00000000  00010216  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_aranges 00000020  00000000  00000000  0001029d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000062  00000000  00000000  000102bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000001de  00000000  00000000  0001031f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000020  00000000  00000000  00010500  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  RO_DATA	00000000 RO_DATA
00400000 l    d  RW_DATA	00000000 RW_DATA
00400004 l    d  ZI_DATA	00000000 ZI_DATA
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 sark_alib.o
00000001 l       *ABS*	00000000 GNU
00000000 l       *ABS*	00000000 NULL
80000000 l       *ABS*	00000000 BIT_31
00000001 l       *ABS*	00000000 BUF_WRITE
00000012 l       *ABS*	00000000 NUM_CPUS
00000006 l       *ABS*	00000000 NUM_LINKS
00000000 l       *ABS*	00000000 ITCM_BASE
00008000 l       *ABS*	00000000 ITCM_SIZE
00008000 l       *ABS*	00000000 ITCM_TOP
00400000 l       *ABS*	00000000 DTCM_BASE
00010000 l       *ABS*	00000000 DTCM_SIZE
00410000 l       *ABS*	00000000 DTCM_TOP
70000000 l       *ABS*	00000000 SDRAM_BASE_UNBUF
60000000 l       *ABS*	00000000 SDRAM_BASE_BUF
60000000 l       *ABS*	00000000 SDRAM_BASE
08000000 l       *ABS*	00000000 SDRAM_SIZE
68000000 l       *ABS*	00000000 SDRAM_TOP
f5000000 l       *ABS*	00000000 SYSRAM_BASE_UNBUF
e5000000 l       *ABS*	00000000 SYSRAM_BASE_BUF
e5000000 l       *ABS*	00000000 SYSRAM_BASE
00008000 l       *ABS*	00000000 SYSRAM_SIZE
e5008000 l       *ABS*	00000000 SYSRAM_TOP
f6000000 l       *ABS*	00000000 ROM_BASE
00008000 l       *ABS*	00000000 ROM_SIZE
f6008000 l       *ABS*	00000000 ROM_TOP
10000000 l       *ABS*	00000000 CC_BASE_UNBUF
20000000 l       *ABS*	00000000 CC_BASE_BUF
20000000 l       *ABS*	00000000 CC_BASE
00000000 l       *ABS*	00000000 CC_TCR
00000004 l       *ABS*	00000000 CC_TXDATA
00000008 l       *ABS*	00000000 CC_TXKEY
0000000c l       *ABS*	00000000 CC_RSR
00000010 l       *ABS*	00000000 CC_RXDATA
00000014 l       *ABS*	00000000 CC_RXKEY
00000018 l       *ABS*	00000000 CC_SAR
0000001c l       *ABS*	00000000 CC_TEST
11000000 l       *ABS*	00000000 TIMER_BASE_UNBUF
21000000 l       *ABS*	00000000 TIMER_BASE_BUF
21000000 l       *ABS*	00000000 TIMER_BASE
00000020 l       *ABS*	00000000 TIMER_OFFSET
21000000 l       *ABS*	00000000 TIMER1_BASE
21000020 l       *ABS*	00000000 TIMER2_BASE
00000000 l       *ABS*	00000000 TC_LOAD
00000004 l       *ABS*	00000000 TC_COUNT
00000008 l       *ABS*	00000000 TC_CONTROL
0000000c l       *ABS*	00000000 TC_INT_CLR
00000010 l       *ABS*	00000000 TC_RAW_INT
00000014 l       *ABS*	00000000 TC_MASK_INT
00000018 l       *ABS*	00000000 TC_BG_LOAD
00000000 l       *ABS*	00000000 T1_LOAD
00000004 l       *ABS*	00000000 T1_COUNT
00000008 l       *ABS*	00000000 T1_CONTROL
0000000c l       *ABS*	00000000 T1_INT_CLR
00000010 l       *ABS*	00000000 T1_RAW_INT
00000014 l       *ABS*	00000000 T1_MASK_INT
00000018 l       *ABS*	00000000 T1_BG_LOAD
00000020 l       *ABS*	00000000 T2_LOAD
00000024 l       *ABS*	00000000 T2_COUNT
00000028 l       *ABS*	00000000 T2_CONTROL
0000002c l       *ABS*	00000000 T2_INT_CLR
00000030 l       *ABS*	00000000 T2_RAW_INT
00000034 l       *ABS*	00000000 T2_MASK_INT
00000038 l       *ABS*	00000000 T2_BG_LOAD
1f000000 l       *ABS*	00000000 VIC_BASE_UNBUF
2f000000 l       *ABS*	00000000 VIC_BASE_BUF
2f000000 l       *ABS*	00000000 VIC_BASE
00000000 l       *ABS*	00000000 VIC_IRQST
00000004 l       *ABS*	00000000 VIC_FIQST
00000008 l       *ABS*	00000000 VIC_RAW
0000000c l       *ABS*	00000000 VIC_SELECT
00000010 l       *ABS*	00000000 VIC_ENABLE
00000014 l       *ABS*	00000000 VIC_DISABLE
00000018 l       *ABS*	00000000 VIC_SOFT_SET
0000001c l       *ABS*	00000000 VIC_SOFT_CLR
00000020 l       *ABS*	00000000 VIC_PROTECT
00000030 l       *ABS*	00000000 VIC_VADDR
00000034 l       *ABS*	00000000 VIC_DEFADDR
00000100 l       *ABS*	00000000 VIC_ADDR
00000100 l       *ABS*	00000000 VIC_ADDR0
00000104 l       *ABS*	00000000 VIC_ADDR1
00000108 l       *ABS*	00000000 VIC_ADDR2
0000010c l       *ABS*	00000000 VIC_ADDR3
00000110 l       *ABS*	00000000 VIC_ADDR4
00000114 l       *ABS*	00000000 VIC_ADDR5
00000118 l       *ABS*	00000000 VIC_ADDR6
0000011c l       *ABS*	00000000 VIC_ADDR7
00000120 l       *ABS*	00000000 VIC_ADDR8
00000124 l       *ABS*	00000000 VIC_ADDR9
00000128 l       *ABS*	00000000 VIC_ADDR10
0000012c l       *ABS*	00000000 VIC_ADDR11
00000130 l       *ABS*	00000000 VIC_ADDR12
00000134 l       *ABS*	00000000 VIC_ADDR13
00000138 l       *ABS*	00000000 VIC_ADDR14
0000013c l       *ABS*	00000000 VIC_ADDR15
00000200 l       *ABS*	00000000 VIC_CNTL
00000200 l       *ABS*	00000000 VIC_CNTL0
00000204 l       *ABS*	00000000 VIC_CNTL1
00000208 l       *ABS*	00000000 VIC_CNTL2
0000020c l       *ABS*	00000000 VIC_CNTL3
00000210 l       *ABS*	00000000 VIC_CNTL4
00000214 l       *ABS*	00000000 VIC_CNTL5
00000218 l       *ABS*	00000000 VIC_CNTL6
0000021c l       *ABS*	00000000 VIC_CNTL7
00000220 l       *ABS*	00000000 VIC_CNTL8
00000224 l       *ABS*	00000000 VIC_CNTL9
00000228 l       *ABS*	00000000 VIC_CNTL10
0000022c l       *ABS*	00000000 VIC_CNTL11
00000230 l       *ABS*	00000000 VIC_CNTL12
00000234 l       *ABS*	00000000 VIC_CNTL13
00000238 l       *ABS*	00000000 VIC_CNTL14
0000023c l       *ABS*	00000000 VIC_CNTL15
00000000 l       *ABS*	00000000 WDOG_INT
00000001 l       *ABS*	00000000 SOFTWARE_INT
00000002 l       *ABS*	00000000 COMM_RX_INT
00000003 l       *ABS*	00000000 COMM_TX_INT
00000004 l       *ABS*	00000000 TIMER1_INT
00000005 l       *ABS*	00000000 TIMER2_INT
00000006 l       *ABS*	00000000 CC_RDY_INT
00000007 l       *ABS*	00000000 CC_RPE_INT
00000008 l       *ABS*	00000000 CC_RFE_INT
00000009 l       *ABS*	00000000 CC_TFL_INT
0000000a l       *ABS*	00000000 CC_TOV_INT
0000000b l       *ABS*	00000000 CC_TMT_INT
0000000c l       *ABS*	00000000 DMA_DONE_INT
0000000d l       *ABS*	00000000 DMA_ERR_INT
0000000e l       *ABS*	00000000 DMA_TO_INT
0000000f l       *ABS*	00000000 RTR_DIAG_INT
00000010 l       *ABS*	00000000 RTR_DUMP_INT
00000011 l       *ABS*	00000000 RTR_ERR_INT
00000012 l       *ABS*	00000000 CPU_INT
00000013 l       *ABS*	00000000 ETH_TX_INT
00000014 l       *ABS*	00000000 ETH_RX_INT
00000015 l       *ABS*	00000000 ETH_PHY_INT
00000016 l       *ABS*	00000000 SLOW_CLK_INT
00000017 l       *ABS*	00000000 CC_TNF_INT
00000018 l       *ABS*	00000000 CC_MC_INT
00000019 l       *ABS*	00000000 CC_P2P_INT
0000001a l       *ABS*	00000000 CC_NN_INT
0000001b l       *ABS*	00000000 CC_FR_INT
0000001c l       *ABS*	00000000 INT0_INT
0000001d l       *ABS*	00000000 INT1_INT
0000001e l       *ABS*	00000000 GPIO8_INT
0000001f l       *ABS*	00000000 GPIO9_INT
30000000 l       *ABS*	00000000 DMA_BASE_UNBUF
40000000 l       *ABS*	00000000 DMA_BASE_BUF
40000000 l       *ABS*	00000000 DMA_BASE
00000004 l       *ABS*	00000000 DMA_ADRS
00000008 l       *ABS*	00000000 DMA_ADRT
0000000c l       *ABS*	00000000 DMA_DESC
00000010 l       *ABS*	00000000 DMA_CTRL
00000014 l       *ABS*	00000000 DMA_STAT
00000018 l       *ABS*	00000000 DMA_GCTL
0000001c l       *ABS*	00000000 DMA_CRCC
00000020 l       *ABS*	00000000 DMA_CRCR
00000024 l       *ABS*	00000000 DMA_TMTV
00000028 l       *ABS*	00000000 DMA_SCTL
00000040 l       *ABS*	00000000 DMA_STAT0
00000044 l       *ABS*	00000000 DMA_STAT1
00000048 l       *ABS*	00000000 DMA_STAT2
0000004c l       *ABS*	00000000 DMA_STAT3
00000050 l       *ABS*	00000000 DMA_STAT4
00000054 l       *ABS*	00000000 DMA_STAT5
00000058 l       *ABS*	00000000 DMA_STAT6
0000005c l       *ABS*	00000000 DMA_STAT7
00000104 l       *ABS*	00000000 DMA_AD2S
00000108 l       *ABS*	00000000 DMA_AD2T
0000010c l       *ABS*	00000000 DMA_DES2
00000180 l       *ABS*	00000000 DMA_CRCT
f0000000 l       *ABS*	00000000 PL340_BASE_UNBUF
e0000000 l       *ABS*	00000000 PL340_BASE_BUF
e0000000 l       *ABS*	00000000 PL340_BASE
00000000 l       *ABS*	00000000 MC_STAT
00000004 l       *ABS*	00000000 MC_CMD
00000008 l       *ABS*	00000000 MC_DIRC
0000000c l       *ABS*	00000000 MC_MCFG
00000010 l       *ABS*	00000000 MC_REFP
00000014 l       *ABS*	00000000 MC_CASL
00000018 l       *ABS*	00000000 MC_DQSS
0000001c l       *ABS*	00000000 MC_MRD
00000020 l       *ABS*	00000000 MC_RAS
00000024 l       *ABS*	00000000 MC_RC
00000028 l       *ABS*	00000000 MC_RCD
0000002c l       *ABS*	00000000 MC_RFC
00000030 l       *ABS*	00000000 MC_RP
00000034 l       *ABS*	00000000 MC_RRD
00000038 l       *ABS*	00000000 MC_WR
0000003c l       *ABS*	00000000 MC_WTR
00000040 l       *ABS*	00000000 MC_XP
00000044 l       *ABS*	00000000 MC_XSR
00000048 l       *ABS*	00000000 MC_ESR
0000004c l       *ABS*	00000000 MC_MCFG2
00000050 l       *ABS*	00000000 MC_MCFG3
00000100 l       *ABS*	00000000 MC_QOS0
00000104 l       *ABS*	00000000 MC_QOS1
00000108 l       *ABS*	00000000 MC_QOS2
0000010c l       *ABS*	00000000 MC_QOS3
00000110 l       *ABS*	00000000 MC_QOS4
00000114 l       *ABS*	00000000 MC_QOS5
00000118 l       *ABS*	00000000 MC_QOS6
0000011c l       *ABS*	00000000 MC_QOS7
00000120 l       *ABS*	00000000 MC_QOS8
00000124 l       *ABS*	00000000 MC_QOS9
00000128 l       *ABS*	00000000 MC_QOS10
0000012c l       *ABS*	00000000 MC_QOS11
00000130 l       *ABS*	00000000 MC_QOS12
00000134 l       *ABS*	00000000 MC_QOS13
00000138 l       *ABS*	00000000 MC_QOS14
0000013c l       *ABS*	00000000 MC_QOS15
00000200 l       *ABS*	00000000 MC_CCFG0
00000204 l       *ABS*	00000000 MC_CCFG1
00000208 l       *ABS*	00000000 MC_CCFG2
0000020c l       *ABS*	00000000 MC_CCFG3
00000300 l       *ABS*	00000000 DLL_STATUS
00000304 l       *ABS*	00000000 DLL_CONFIG0
00000308 l       *ABS*	00000000 DLL_CONFIG1
f1000000 l       *ABS*	00000000 RTR_BASE_UNBUF
e1000000 l       *ABS*	00000000 RTR_BASE_BUF
e1000000 l       *ABS*	00000000 RTR_BASE
00000000 l       *ABS*	00000000 RTR_CONTROL
00000004 l       *ABS*	00000000 RTR_STATUS
00000008 l       *ABS*	00000000 RTR_EHDR
0000000c l       *ABS*	00000000 RTR_EKEY
00000010 l       *ABS*	00000000 RTR_EDAT
00000014 l       *ABS*	00000000 RTR_ESTAT
00000018 l       *ABS*	00000000 RTR_DHDR
0000001c l       *ABS*	00000000 RTR_DKEY
00000020 l       *ABS*	00000000 RTR_DDAT
00000024 l       *ABS*	00000000 RTR_DLINK
00000028 l       *ABS*	00000000 RTR_DSTAT
0000002c l       *ABS*	00000000 RTR_DGEN
00000200 l       *ABS*	00000000 RTR_DGF0
00000204 l       *ABS*	00000000 RTR_DGF1
00000208 l       *ABS*	00000000 RTR_DGF2
0000020c l       *ABS*	00000000 RTR_DGF3
00000210 l       *ABS*	00000000 RTR_DGF4
00000214 l       *ABS*	00000000 RTR_DGF5
00000218 l       *ABS*	00000000 RTR_DGF6
0000021c l       *ABS*	00000000 RTR_DGF7
00000220 l       *ABS*	00000000 RTR_DGF8
00000224 l       *ABS*	00000000 RTR_DGF9
00000228 l       *ABS*	00000000 RTR_DGF10
0000022c l       *ABS*	00000000 RTR_DGF11
00000230 l       *ABS*	00000000 RTR_DGF12
00000234 l       *ABS*	00000000 RTR_DGF13
00000238 l       *ABS*	00000000 RTR_DGF14
0000023c l       *ABS*	00000000 RTR_DGF15
00000300 l       *ABS*	00000000 RTR_DGC0
00000304 l       *ABS*	00000000 RTR_DGC1
00000308 l       *ABS*	00000000 RTR_DGC2
0000030c l       *ABS*	00000000 RTR_DGC3
00000310 l       *ABS*	00000000 RTR_DGC4
00000314 l       *ABS*	00000000 RTR_DGC5
00000318 l       *ABS*	00000000 RTR_DGC6
0000031c l       *ABS*	00000000 RTR_DGC7
00000320 l       *ABS*	00000000 RTR_DGC8
00000324 l       *ABS*	00000000 RTR_DGC9
00000328 l       *ABS*	00000000 RTR_DGC10
0000032c l       *ABS*	00000000 RTR_DGC11
00000330 l       *ABS*	00000000 RTR_DGC12
00000334 l       *ABS*	00000000 RTR_DGC13
00000338 l       *ABS*	00000000 RTR_DGC14
0000033c l       *ABS*	00000000 RTR_DGC15
00000f00 l       *ABS*	00000000 RTR_TST1
00000f04 l       *ABS*	00000000 RTR_TST2
00002000 l       *ABS*	00000000 P2P_TABLE_SIZE
00000400 l       *ABS*	00000000 MC_TABLE_SIZE
00000018 l       *ABS*	00000000 MC_RAM_WIDTH
00ffffff l       *ABS*	00000000 MC_RAM_MASK
00000008 l       *ABS*	00000000 P2P_EPW
00000003 l       *ABS*	00000000 P2P_LOG_EPW
00000007 l       *ABS*	00000000 P2P_EMASK
00000003 l       *ABS*	00000000 P2P_BPE
00000007 l       *ABS*	00000000 P2P_BMASK
00db6db6 l       *ABS*	00000000 P2P_INIT
e1004000 l       *ABS*	00000000 RTR_MCRAM_BASE
e1005000 l       *ABS*	00000000 RTR_MCRAM_TOP
e1008000 l       *ABS*	00000000 RTR_MCKEY_BASE
e1009000 l       *ABS*	00000000 RTR_MCKEY_TOP
e100c000 l       *ABS*	00000000 RTR_MCMASK_BASE
e100d000 l       *ABS*	00000000 RTR_MCMASK_TOP
e1010000 l       *ABS*	00000000 RTR_P2P_BASE
e1018000 l       *ABS*	00000000 RTR_P2P_TOP
00000020 l       *ABS*	00000000 MC_CAM_WIDTH
f2000000 l       *ABS*	00000000 SYSCTL_BASE_UNBUF
e2000000 l       *ABS*	00000000 SYSCTL_BASE_BUF
e2000000 l       *ABS*	00000000 SYSCTL_BASE
5ec00000 l       *ABS*	00000000 SC_CODE
59111012 l       *ABS*	00000000 CHIP_ID_CODE
00000000 l       *ABS*	00000000 SC_CHIP_ID
00000004 l       *ABS*	00000000 SC_CPU_DIS
00000008 l       *ABS*	00000000 SC_SET_IRQ
0000000c l       *ABS*	00000000 SC_CLR_IRQ
00000010 l       *ABS*	00000000 SC_SET_OK
00000010 l       *ABS*	00000000 SC_CPU_OK
00000014 l       *ABS*	00000000 SC_CLR_OK
00000018 l       *ABS*	00000000 SC_SOFT_RST_L
0000001c l       *ABS*	00000000 SC_HARD_RST_L
00000020 l       *ABS*	00000000 SC_SUBS_RST_L
00000024 l       *ABS*	00000000 SC_SOFT_RST_P
00000028 l       *ABS*	00000000 SC_HARD_RST_P
0000002c l       *ABS*	00000000 SC_SUBS_RST_P
00000030 l       *ABS*	00000000 SC_RST_CODE
00000034 l       *ABS*	00000000 SC_MON_ID
00000038 l       *ABS*	00000000 SC_MISC_CTRL
0000003c l       *ABS*	00000000 GPIO_RES
00000040 l       *ABS*	00000000 GPIO_PORT
00000044 l       *ABS*	00000000 GPIO_DIR
00000048 l       *ABS*	00000000 GPIO_SET
0000004c l       *ABS*	00000000 GPIO_CLR
00000048 l       *ABS*	00000000 GPIO_READ
00000050 l       *ABS*	00000000 SC_PLL1
00000054 l       *ABS*	00000000 SC_PLL2
00000058 l       *ABS*	00000000 SC_FLAG
00000058 l       *ABS*	00000000 SC_SETFLAG
0000005c l       *ABS*	00000000 SC_CLRFLAG
00000060 l       *ABS*	00000000 SC_CLKMUX
00000064 l       *ABS*	00000000 SC_SLEEP
00000068 l       *ABS*	00000000 SC_TS0
0000006c l       *ABS*	00000000 SC_TS1
00000070 l       *ABS*	00000000 SC_TS2
00000080 l       *ABS*	00000000 SC_ARB0
00000100 l       *ABS*	00000000 SC_TAS0
00000180 l       *ABS*	00000000 SC_TAC0
00000200 l       *ABS*	00000000 SC_LINK_DIS
00000000 l       *ABS*	00000000 RST_POR
00000001 l       *ABS*	00000000 RST_WDT
00000002 l       *ABS*	00000000 RST_USER
00000003 l       *ABS*	00000000 RST_SW
00000004 l       *ABS*	00000000 RST_WDI
f3000000 l       *ABS*	00000000 WDOG_BASE_UNBUF
e3000000 l       *ABS*	00000000 WDOG_BASE_BUF
e3000000 l       *ABS*	00000000 WDOG_BASE
00000000 l       *ABS*	00000000 WD_LOAD
00000004 l       *ABS*	00000000 WD_COUNT
00000008 l       *ABS*	00000000 WD_CTRL
0000000c l       *ABS*	00000000 WD_INTCLR
00000010 l       *ABS*	00000000 WD_RAWINT
00000014 l       *ABS*	00000000 WD_MSKINT
00000c00 l       *ABS*	00000000 WD_LOCK
1acce551 l       *ABS*	00000000 WD_CODE
00000001 l       *ABS*	00000000 WD_INT_B
00000002 l       *ABS*	00000000 WD_RST_B
f4000000 l       *ABS*	00000000 ETH_BASE_UNBUF
e4000000 l       *ABS*	00000000 ETH_BASE_BUF
e4000000 l       *ABS*	00000000 ETH_BASE
e4000000 l       *ABS*	00000000 ETH_TX_BASE
00000600 l       *ABS*	00000000 ETH_TX_SIZE
e4000600 l       *ABS*	00000000 ETH_TX_TOP
e4004000 l       *ABS*	00000000 ETH_RX_BASE
00000c00 l       *ABS*	00000000 ETH_RX_SIZE
e4004c00 l       *ABS*	00000000 ETH_RX_TOP
e4008000 l       *ABS*	00000000 ETH_RX_DESC_RAM
e400c000 l       *ABS*	00000000 ETH_REGS
00000000 l       *ABS*	00000000 ETH_CONTROL
00000004 l       *ABS*	00000000 ETH_STATUS
00000008 l       *ABS*	00000000 ETH_TX_LEN
0000000c l       *ABS*	00000000 ETH_TX_CMD
00000010 l       *ABS*	00000000 ETH_RX_CMD
00000014 l       *ABS*	00000000 ETH_MAC_LO
00000018 l       *ABS*	00000000 ETH_MAC_HI
0000001c l       *ABS*	00000000 ETH_PHY_CTRL
00000020 l       *ABS*	00000000 ETH_INT_CLR
00000024 l       *ABS*	00000000 ETH_RX_BUF_RP
0000002c l       *ABS*	00000000 ETH_RX_DESC_RP
00000001 l       *ABS*	00000000 ETH_TX_CLR
00000010 l       *ABS*	00000000 ETH_RX_CLR
00000001 l       *ABS*	00000000 PHY_CTRL_NRST
00000002 l       *ABS*	00000000 PHY_CTRL_DIN
00000004 l       *ABS*	00000000 PHY_CTRL_DOUT
00000008 l       *ABS*	00000000 PHY_CTRL_OE
00000010 l       *ABS*	00000000 PHY_CTRL_CLK
00000000 l       *ABS*	00000000 PKT_MC
00400000 l       *ABS*	00000000 PKT_P2P
00800000 l       *ABS*	00000000 PKT_NN
00a00000 l       *ABS*	00000000 PKT_NND
00c00000 l       *ABS*	00000000 PKT_FR
00020000 l       *ABS*	00000000 PKT_PL
00020000 l       *ABS*	00000000 PKT_MC_PL
00420000 l       *ABS*	00000000 PKT_P2P_PL
00820000 l       *ABS*	00000000 PKT_NN_PL
00c20000 l       *ABS*	00000000 PKT_FR_PL
0000000a l       *ABS*	00000000 CLK_XTAL_MHZ
0007011a l       *ABS*	00000000 PLL_260
0007011e l       *ABS*	00000000 PLL_300
00070121 l       *ABS*	00000000 PLL_330
00070128 l       *ABS*	00000000 PLL_400
00000050 l       *ABS*	00000000 PLL_LOCK_TIME
809488a5 l       *ABS*	00000000 PLL_CLK_SEL
00000020 l       *ABS*	00000000 SERIAL_NCS
00000010 l       *ABS*	00000000 SERIAL_CLK
00000008 l       *ABS*	00000000 SERIAL_SI
00000004 l       *ABS*	00000000 SERIAL_SO
00000038 l       *ABS*	00000000 SERIAL_OE
80000000 l       *ABS*	00000000 SDRAM_TQ
40000000 l       *ABS*	00000000 SDRAM_DPD
20000000 l       *ABS*	00000000 SDRAM_HERE
00000001 l       *ABS*	00000000 LED_0
00000010 l       *ABS*	00000000 MODE_USER
00000011 l       *ABS*	00000000 MODE_FIQ
00000012 l       *ABS*	00000000 MODE_IRQ
00000013 l       *ABS*	00000000 MODE_SVC
00000017 l       *ABS*	00000000 MODE_ABT
0000001b l       *ABS*	00000000 MODE_UND
0000001f l       *ABS*	00000000 MODE_SYS
00000020 l       *ABS*	00000000 THUMB_BIT
00000080 l       *ABS*	00000000 IMASK_IRQ
00000040 l       *ABS*	00000000 IMASK_FIQ
000000c0 l       *ABS*	00000000 IMASK_ALL
00000001 l       *ABS*	00000000 SARK_EVENT
00000060 l       *ABS*	00000000 SVC_STACK
00000040 l       *ABS*	00000000 IRQ_STACK
00000040 l       *ABS*	00000000 FIQ_STACK
00000120 l       *ABS*	00000000 SYS_STACK
00000004 l       *ABS*	00000000 NUM_SDP_MSGS
0000000f l       *ABS*	00000000 SARK_SLOT
00000010 l       *ABS*	00000000 INIT_EVENTS
deaddead l       *ABS*	00000000 DEAD_WORD
00000001 l       *ABS*	00000000 APLX_ACOPY
00000002 l       *ABS*	00000000 APLX_RCOPY
00000003 l       *ABS*	00000000 APLX_FILL
00000004 l       *ABS*	00000000 APLX_EXEC
000000ff l       *ABS*	00000000 APLX_END
00000010 l       *ABS*	00000000 APLX_ENTRY_SIZE
00000040 l       *ABS*	00000000 APLX_BUF_SIZE
00007fc0 l       *ABS*	00000000 APLX_BUFFER
000000ff l       *ABS*	00000000 TAG_NONE
00000000 l       *ABS*	00000000 TAG_HOST
00000001 l       *ABS*	00000000 RTR_ALLOC_FIRST
00000400 l       *ABS*	00000000 RTR_ALLOC_LAST
000003ff l       *ABS*	00000000 RTR_ALLOC_MAX
00000001 l       *ABS*	00000000 ALLOC_LOCK
00000002 l       *ABS*	00000000 ALLOC_ID
00000005 l       *ABS*	00000000 A_LOCK_SEMA
00000001 l       *ABS*	00000000 A_RTE_RESET
00000002 l       *ABS*	00000000 A_RTE_UNDEF
00000003 l       *ABS*	00000000 A_RTE_SVC
00000004 l       *ABS*	00000000 A_RTE_PABT
00000005 l       *ABS*	00000000 A_RTE_DABT
00000006 l       *ABS*	00000000 A_RTE_IRQ
00000007 l       *ABS*	00000000 A_RTE_FIQ
00000008 l       *ABS*	00000000 A_RTE_VIC
00000002 l       *ABS*	00000000 A_STATE_RTE
00000006 l       *ABS*	00000000 EVENT_COUNT
00000000 l       *ABS*	00000000 CMD_VER
00000001 l       *ABS*	00000000 CMD_RUN
00000002 l       *ABS*	00000000 CMD_READ
00000003 l       *ABS*	00000000 CMD_WRITE
00000004 l       *ABS*	00000000 CMD_APLX
00000005 l       *ABS*	00000000 CMD_FILL
00000010 l       *ABS*	00000000 CMD_REMAP
00000011 l       *ABS*	00000000 CMD_LINK_READ
00000012 l       *ABS*	00000000 CMD_LINK_WRITE
00000013 l       *ABS*	00000000 CMD_AR
00000014 l       *ABS*	00000000 CMD_NNP
00000015 l       *ABS*	00000000 CMD_P2PC
00000016 l       *ABS*	00000000 CMD_SIG
00000017 l       *ABS*	00000000 CMD_FFD
00000018 l       *ABS*	00000000 CMD_AS
00000019 l       *ABS*	00000000 CMD_LED
0000001a l       *ABS*	00000000 CMD_IPTAG
0000001b l       *ABS*	00000000 CMD_SROM
0000001c l       *ABS*	00000000 CMD_ALLOC
0000001d l       *ABS*	00000000 CMD_RTR
00000040 l       *ABS*	00000000 CMD_TUBE
00000080 l       *ABS*	00000000 RC_OK
00000081 l       *ABS*	00000000 RC_LEN
00000082 l       *ABS*	00000000 RC_SUM
00000083 l       *ABS*	00000000 RC_CMD
00000084 l       *ABS*	00000000 RC_ARG
00000085 l       *ABS*	00000000 RC_PORT
00000086 l       *ABS*	00000000 RC_TIMEOUT
00000087 l       *ABS*	00000000 RC_ROUTE
00000088 l       *ABS*	00000000 RC_CPU
00000089 l       *ABS*	00000000 RC_DEAD
0000008a l       *ABS*	00000000 RC_BUF
0000008b l       *ABS*	00000000 RC_P2P_NOREPLY
0000008c l       *ABS*	00000000 RC_P2P_REJECT
0000008d l       *ABS*	00000000 RC_P2P_BUSY
0000008e l       *ABS*	00000000 RC_P2P_TIMEOUT
0000008f l       *ABS*	00000000 RC_PKT_TX
00000000 l       *ABS*	00000000 TYPE_BYTE
00000001 l       *ABS*	00000000 TYPE_HALF
00000002 l       *ABS*	00000000 TYPE_WORD
00000005 l       *ABS*	00000000 PORT_SHIFT
000000e0 l       *ABS*	00000000 PORT_MASK
0000001f l       *ABS*	00000000 CPU_MASK
000000ff l       *ABS*	00000000 PORT_ETH
00000100 l       *ABS*	00000000 SDP_BUF_SIZE
00000080 l       *ABS*	00000000 VCPU_SIZE
0000002c l       *ABS*	00000000 VCPU_RT_CODE
0000002d l       *ABS*	00000000 VCPU_CPU_FLAGS
0000002e l       *ABS*	00000000 VCPU_CPU_STATE
0000002f l       *ABS*	00000000 VCPU_APP_ID
0000001c l       *ABS*	00000000 SARK_MSG_INT
0000001d l       *ABS*	00000000 SARK_SIG_INT
00000000 l       *ABS*	00000000 SARK_VIRT_CPU
00000008 l       *ABS*	00000000 SARK_RANDOM
00000030 l       *ABS*	00000000 SARK_CPU_CLK
00000020 l       *ABS*	00000000 SV_SSIZE
00000060 l       *ABS*	00000000 SV_USIZE
00000080 l       *ABS*	00000000 SV_ISIZE
00000020 l       *ABS*	00000000 SV_VSIZE
00000040 l       *ABS*	00000000 SV_RSIZE
00001000 l       *ABS*	00000000 SV_SIZE
e5007fe0 l       *ABS*	00000000 SV_SROM
e5007f80 l       *ABS*	00000000 SV_UBASE
e5007f00 l       *ABS*	00000000 SV_IBASE
e5007f00 l       *ABS*	00000000 SV_SV
00000100 l       *ABS*	00000000 SYS_BOOT
e5007000 l       *ABS*	00000000 SYS_USER_TOP
e5000100 l       *ABS*	00000000 SYS_USER_BASE
e5007ee0 l       *ABS*	00000000 SV_VECTORS
e5007ea0 l       *ABS*	00000000 SV_RANDOM
e5007000 l       *ABS*	00000000 SV_VCPU
e5007900 l       *ABS*	00000000 SV_SPARE
000005a0 l       *ABS*	00000000 SPARE_SIZE
e5007fe0 l       *ABS*	00000000 SROM_FLAG_BASE
e5007f80 l       *ABS*	00000000 STATUS_MAP_BASE
e5007ee0 l       *ABS*	00000000 RST_BLOCK_BASE
00008000 l       *ABS*	00000000 SRF_PRESENT
000000f0 l       *ABS*	00000000 SRF_HW_VER
00000008 l       *ABS*	00000000 SRF_PHY_INIT
00000004 l       *ABS*	00000000 SRF_PHY_RST
00000002 l       *ABS*	00000000 SRF_PHY_WAIT
00000001 l       *ABS*	00000000 SRF_ETH
00000000 l       *ABS*	00000000 SRF_NONE
00000020 l       RO_DATA	00000000 reset_vec
00000004 l       RO_DATA	00000000 undef
00000024 l       RO_DATA	00000000 undef_vec
00000028 l       RO_DATA	00000000 svc_vec
0000002c l       RO_DATA	00000000 pabt_vec
00000030 l       RO_DATA	00000000 dabt_vec
0000003c l       RO_DATA	00000000 fiq_vec
00000078 l       RO_DATA	00000000 reset_entry
000000d4 l       RO_DATA	00000000 undef_error
000000dc l       RO_DATA	00000000 svc_error
000000e4 l       RO_DATA	00000000 pabt_error
000000ec l       RO_DATA	00000000 dabt_error
00000034 l       RO_DATA	00000000 aplx_proc
00000038 l       RO_DATA	00000000 irq_vec
000000f4 l       RO_DATA	00000000 irq_error
000000fc l       RO_DATA	00000000 fiq_error
00000040 l       RO_DATA	00000000 svc_stack
00000042 l       RO_DATA	00000000 irq_stack
00000044 l       RO_DATA	00000000 fiq_stack
00000046 l       RO_DATA	00000000 sys_stack
00000048 l       RO_DATA	00000000 code_top
0000004c l       RO_DATA	00000000 heap_base
00000050 l       RO_DATA	00000000 stack_top
00000054 l       RO_DATA	00000000 stack_size
00000056 l       RO_DATA	00000000 num_msgs
00000057 l       RO_DATA	00000000 sark_slot
00000058 l       RO_DATA	00000000 num_events
00000059 l       RO_DATA	00000000 app_id
0000005a l       RO_DATA	00000000 __PAD1
0000005c l       RO_DATA	00000000 stack_fill
00000060 l       RO_DATA	00000000 event_vec
000000cc l       RO_DATA	00000000 reset_error
00000110 l       RO_DATA	00000000 exc_error
00000134 l       RO_DATA	00000000 cc_error
000001e0 l       RO_DATA	00000000 lg1
0000021c l       RO_DATA	00000000 ws1
0000027c l       RO_DATA	00000000 wc2
00000264 l       RO_DATA	00000000 wc1
000002a8 l       RO_DATA	00000000 delay1
0000035c l       RO_DATA	00000000 aplx_buffer
00000360 l       RO_DATA	00000000 aplx_loader
0000034c l       RO_DATA	00000000 aplx_l0
00000378 l       RO_DATA	00000000 aplx_copy
00000374 l       RO_DATA	00000000 aplx_rcopy
00000386 l       RO_DATA	00000000 aplx_fill
00000396 l       RO_DATA	00000000 aplx_exec
0000038c l       RO_DATA	00000000 aplx_l1
00000000 l    df *ABS*	00000000 sark_base.c
00000000 l    df *ABS*	00000000 sark_event.c
00000000 l    df *ABS*	00000000 sark_timer.c
00000000 l    df *ABS*	00000000 sark_hw.c
00000000 l    df *ABS*	00000000 sark_isr.c
00000000 l    df *ABS*	00000000 sark_alloc.c
00000000 l    df *ABS*	00000000 sark_io.c
00000bf0 l     F RO_DATA	00000044 io_buf_init
00000d20 l     F RO_DATA	000000c6 io_put_fixed
00400004 l     O ZI_DATA	00000004 io_msg
0000156b l     O RO_DATA	00000011 hex
00400008 l     O ZI_DATA	00000004 io_buf
0040000c l     O ZI_DATA	00000004 buf_ptr
00400010 l     O ZI_DATA	00000004 sp_ptr
00000000 l    df *ABS*	00000000 sark_pkt.c
00000000 l    df *ABS*	00000000 
00000000 l    df *ABS*	00000000 dimension_source.c
00000000 l    df *ABS*	00000000 spin1_api.c
00400014 l     O ZI_DATA	00000004 warnings
00400020 l     O ZI_DATA	00000004 fullq
00400024 l     O ZI_DATA	00000004 pfull
00400028 l     O ZI_DATA	00000320 task_queue
00000000 l    df *ABS*	00000000 spin1_isr.c
00000000 l    df *ABS*	00000000 fixed-bit.c
00000000 l    df *ABS*	00000000 sark_build.c
00000000 l    df *ABS*	00000000 
00000040 l       *ABS*	00000000 RO_FROM
00000010 l       *ABS*	00000000 APLX_ENTRY
00000000 l       *UND*	00000000 __fini_array_end
00000000 l       *UND*	00000000 malloc
00000000 l       *UND*	00000000 __bss_start__
000017e0 l       *ABS*	00000000 RW_FROM
00000000 l       *UND*	00000000 __deregister_frame_info
00000000 l       *UND*	00000000 _ITM_registerTMCloneTable
00400000 l       *ABS*	00000000 DTCM_BASE
00000000 l       *UND*	00000000 __bss_end__
00000000 l       *UND*	00000000 software_init_hook
00400000 l       *ABS*	00000000 RW_BASE
00000004 l       *ABS*	00000000 RW_LENGTH
00000040 l       *ABS*	00000000 APLX_SIZE
00000000 l       *UND*	00000000 _ITM_deregisterTMCloneTable
00000000 l       *UND*	00000000 __fini_array_start
00000000 l       *UND*	00000000 main
00000000 l       *UND*	00000000 __init_array_end
00000000 l       *UND*	00000000 hardware_init_hook
00000000 l       *UND*	00000000 __preinit_array_end
00000000 l       *UND*	00000000 __stack
00400004 l       *ABS*	00000000 ZI_BASE
00000000 l       *ABS*	00000000 RO_BASE
00000000 l       *ABS*	00000000 ITCM_BASE
00000000 l       *UND*	00000000 __init_array_start
00000000 l       *UND*	00000000 _exit
00000000 l       *UND*	00000000 _Jv_RegisterClasses
00000000 l       *UND*	00000000 __preinit_array_start
00000000 l       *UND*	00000000 __register_frame_info
00000698 l       *ABS*	00000000 ZI_LENGTH
00000000 l       *UND*	00000000 free
000001cc g     F RO_DATA	00000000 sark_lock_get
00001244 g     F RO_DATA	000001c8 sark_pre_main
00400018 g     O ZI_DATA	00000004 barrier_rdygo
0000047c g     F RO_DATA	00000034 sark_shmsg_get
0040041c g     O ZI_DATA	00000004 barrier_rdy1_cnt
00000800 g       *ABS*	00000000 STACK_SIZE
000010a0 g     F RO_DATA	0000004c spin1_callback_on
0000023c g     F RO_DATA	00000000 sark_msg_cpy
00400420 g     O ZI_DATA	00000004 barrier_rdy2_cnt
00000920 g     F RO_DATA	0000003c event_alloc
0000040c g     F RO_DATA	0000001e sark_block_init
0000045c g     F RO_DATA	00000020 sark_msg_free
000010ec g     F RO_DATA	000000f0 spin1_send_mc_packet
0000039c g     F RO_DATA	00000024 c_main
0000076c g     F RO_DATA	00000168 sark_int
000002e4 g     F RO_DATA	00000000 sark_int_han
000001c4 g     F RO_DATA	00000000 spin1_mode_restore
000003c0 g     F RO_DATA	00000040 timer_callback
000001a4 g     F RO_DATA	00000000 spin1_irq_disable
0000075c g     F RO_DATA	00000010 sark_cmd_fill
0000095c g     F RO_DATA	00000050 sark_vic_init
00000168 g     F RO_DATA	00000000 cpu_shutdown
00400424 g     O ZI_DATA	00000004 def_fiq_isr
000001c4 g     F RO_DATA	00000000 cpu_int_restore
00400428 g     O ZI_DATA	0000002c diagnostics
00410000 g       *ABS*	00000000 STACK_TOP
0040069c g       ZI_DATA	00000000 HEAP_BASE
00000b00 g     F RO_DATA	000000c0 sark_xalloc
00400454 g     O ZI_DATA	00000004 user_arg1
000004b0 g     F RO_DATA	00000024 sark_shmsg_free
00000318 g     F RO_DATA	00000000 schedule
00001478 g     F RO_DATA	000000b0 barrier_packet_handler
00000128 g       RO_DATA	00000000 rt_error
00000a08 g     F RO_DATA	0000005c rtr_mc_clear
00001528 g     F RO_DATA	00000020 .hidden __gnu_fractunssasi
0040001c g     O ZI_DATA	00000004 barrier_go
0000140c g     F RO_DATA	0000002c sark_post_main
000001a4 g     F RO_DATA	00000000 cpu_irq_disable
00000000 g       RO_DATA	00000000 cpu_reset
000002b4 g     F RO_DATA	00000000 sark_div10
00000a64 g     F RO_DATA	00000038 rtr_mc_init
00000104 g       RO_DATA	00000000 vic_error
000009dc g     F RO_DATA	0000002c v2p_mask
0000154c g     O RO_DATA	00000010 build_name
00001098 g     F RO_DATA	00000008 sark_config
000008d4 g     F RO_DATA	00000034 event_pause
00001548 g     O RO_DATA	00000004 build_date
000001f0 g     F RO_DATA	00000000 sark_lock_free
00000bc0 g     F RO_DATA	00000018 sark_alloc
0000018c g     F RO_DATA	00000000 cpu_init_mode
0000024c g     F RO_DATA	00000000 sark_word_cpy
00000178 g     F RO_DATA	00000000 cpu_sleep
00400000 g     O RW_DATA	00000004 fiq_event
00400458 g     O ZI_DATA	00000001 leadAp
00400348 g     O ZI_DATA	00000038 sark
000005b8 g     F RO_DATA	0000009c sark_msg_send
00000654 g     F RO_DATA	00000040 sark_cmd_ver
00000908 g     F RO_DATA	00000018 event_stop
000001b4 g     F RO_DATA	00000000 cpu_int_disable
000009ac g     F RO_DATA	00000030 sark_vic_set
0040045c g     O ZI_DATA	00000004 thrown
00000bd8 g     F RO_DATA	00000018 sark_heap_init
00400380 g     O ZI_DATA	0000009c event
000006f6 g     F RO_DATA	00000066 sark_cmd_write
00001438 g     F RO_DATA	00000040 cc_rx_ready_isr
000004d4  w    F RO_DATA	000000e4 sark_init
00000400  w    F RO_DATA	0000000c rte_handler
00000344 g     F RO_DATA	00000000 sark_aplx
00000de8 g     F RO_DATA	000002b0 io_printf
00400460 g     O ZI_DATA	00000148 dma_queue
00000218 g     F RO_DATA	00000000 sark_word_set
00000314 g     F RO_DATA	00000000 null_int_han
000011dc g     F RO_DATA	00000068 schedule_sysmode
00000204 g     F RO_DATA	00000000 sark_str_cpy
00000a9c g     F RO_DATA	00000064 rtr_mc_set
004005a8 g     O ZI_DATA	00000004 user_arg0
004005ac g     O ZI_DATA	00000028 callback
00000c34 g     F RO_DATA	000000ec io_put_char
000001b4 g     F RO_DATA	00000000 spin1_int_disable
00000694 g     F RO_DATA	00000062 sark_cmd_read
000017b0 g       *ABS*	00000000 RO_LENGTH
0000042c g     F RO_DATA	00000030 sark_msg_get
000002a0 g     F RO_DATA	00000000 sark_delay_us
004005d4 g     O ZI_DATA	000000c8 tx_packet_queue



Disassembly of section RO_DATA:

00000000 <cpu_reset>:
       0:	e59ff018 	ldr	pc, [pc, #24]	; 20 <reset_vec>

00000004 <undef>:
       4:	e59ff018 	ldr	pc, [pc, #24]	; 24 <undef_vec>
       8:	e59ff018 	ldr	pc, [pc, #24]	; 28 <svc_vec>
       c:	e59ff018 	ldr	pc, [pc, #24]	; 2c <pabt_vec>
      10:	e59ff018 	ldr	pc, [pc, #24]	; 30 <dabt_vec>
      14:	ebfffffa 	bl	4 <undef>
      18:	e51ffff0 	ldr	pc, [pc, #-4080]	; fffff030 <ROM_TOP+0x9ff7030>
      1c:	e59ff018 	ldr	pc, [pc, #24]	; 3c <fiq_vec>

00000020 <reset_vec>:
      20:	00000078 	.word	0x00000078

00000024 <undef_vec>:
      24:	000000d4 	.word	0x000000d4

00000028 <svc_vec>:
      28:	000000dc 	.word	0x000000dc

0000002c <pabt_vec>:
      2c:	000000e4 	.word	0x000000e4

00000030 <dabt_vec>:
      30:	000000ec 	.word	0x000000ec

00000034 <aplx_proc>:
      34:	00000345 	.word	0x00000345

00000038 <irq_vec>:
      38:	000000f4 	.word	0x000000f4

0000003c <fiq_vec>:
      3c:	000000fc 	.word	0x000000fc

00000040 <svc_stack>:
      40:	0060      	.short	0x0060

00000042 <irq_stack>:
      42:	0040      	.short	0x0040

00000044 <fiq_stack>:
      44:	0040      	.short	0x0040

00000046 <sys_stack>:
      46:	0120      	.short	0x0120

00000048 <code_top>:
      48:	000017b0 	.word	0x000017b0

0000004c <heap_base>:
      4c:	0040069c 	.word	0x0040069c

00000050 <stack_top>:
      50:	00410000 	.word	0x00410000

00000054 <stack_size>:
      54:	0800      	.short	0x0800

00000056 <num_msgs>:
      56:	04          	.byte	0x04

00000057 <sark_slot>:
      57:	0f          	.byte	0x0f

00000058 <num_events>:
      58:	10          	.byte	0x10

00000059 <app_id>:
	...

0000005a <__PAD1>:
	...

0000005c <stack_fill>:
      5c:	deaddead 	.word	0xdeaddead

00000060 <event_vec>:
	...

00000078 <reset_entry>:
      78:	e24f1060 	sub	r1, pc, #96	; 0x60
      7c:	e5c10039 	strb	r0, [r1, #57]	; 0x39
      80:	e28f0044 	add	r0, pc, #68	; 0x44
      84:	e5810000 	str	r0, [r1]
      88:	e59f00f0 	ldr	r0, [pc, #240]	; 180 <DMA_CRCT>
      8c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
      90:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
      94:	e3a0d902 	mov	sp, #32768	; 0x8000
      98:	fa0003fe 	blx	1098 <sark_config>
      9c:	e51fd054 	ldr	sp, [pc, #-84]	; 50 <stack_top>
      a0:	e15f25b4 	ldrh	r2, [pc, #-84]	; 54 <stack_size>
      a4:	e51f1050 	ldr	r1, [pc, #-80]	; 5c <stack_fill>
      a8:	e04d0002 	sub	r0, sp, r2
      ac:	eb000059 	bl	218 <sark_word_set>
      b0:	e1a0000d 	mov	r0, sp
      b4:	fa000106 	blx	4d4 <sark_init>
      b8:	e121f000 	msr	CPSR_c, r0
      bc:	fa000460 	blx	1244 <sark_pre_main>
      c0:	eb0000b5 	bl	39c <c_main>
      c4:	fa0004d0 	blx	140c <sark_post_main>
      c8:	eb00002a 	bl	178 <cpu_sleep>

000000cc <reset_error>:
      cc:	e3a00001 	mov	r0, #1
      d0:	ea000014 	b	128 <rt_error>

000000d4 <undef_error>:
      d4:	e3a0b002 	mov	fp, #2
      d8:	ea00000c 	b	110 <exc_error>

000000dc <svc_error>:
      dc:	e3a0b003 	mov	fp, #3
      e0:	ea00000a 	b	110 <exc_error>

000000e4 <pabt_error>:
      e4:	e3a0b004 	mov	fp, #4
      e8:	ea000008 	b	110 <exc_error>

000000ec <dabt_error>:
      ec:	e3a0b005 	mov	fp, #5
      f0:	ea000006 	b	110 <exc_error>

000000f4 <irq_error>:
      f4:	e3a0b006 	mov	fp, #6
      f8:	ea000004 	b	110 <exc_error>

000000fc <fiq_error>:
      fc:	e3a0b007 	mov	fp, #7
     100:	ea000002 	b	110 <exc_error>

00000104 <vic_error>:
     104:	e3a0b008 	mov	fp, #8
     108:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     10c:	e5900030 	ldr	r0, [r0, #48]	; 0x30

00000110 <exc_error>:
     110:	e1a0a00e 	mov	sl, lr
     114:	e14f8000 	mrs	r8, SPSR
     118:	e38890c0 	orr	r9, r8, #192	; 0xc0
     11c:	e3c99020 	bic	r9, r9, #32
     120:	e12ff009 	msr	CPSR_fsxc, r9
     124:	ea000002 	b	134 <cc_error>

00000128 <rt_error>:
     128:	e1a0b000 	mov	fp, r0
     12c:	e10f8000 	mrs	r8, CPSR
     130:	e1a0a00e 	mov	sl, lr

00000134 <cc_error>:
     134:	e59fc048 	ldr	ip, [pc, #72]	; 184 <DMA_CRCT+0x4>
     138:	e59cc000 	ldr	ip, [ip]
     13c:	e3a09080 	mov	r9, #128	; 0x80
     140:	e59fe040 	ldr	lr, [pc, #64]	; 188 <DMA_CRCT+0x8>
     144:	e02ee99c 	mla	lr, ip, r9, lr
     148:	e1a0900d 	mov	r9, sp
     14c:	e88e07ff 	stm	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl}
     150:	e5ceb02c 	strb	fp, [lr, #44]	; 0x2c
     154:	e3a08002 	mov	r8, #2
     158:	e5ce802e 	strb	r8, [lr, #46]	; 0x2e
     15c:	e1a0000b 	mov	r0, fp
     160:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
     164:	fa0000a5 	blx	400 <rte_handler>

00000168 <cpu_shutdown>:
     168:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
     16c:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     170:	e3e01000 	mvn	r1, #0
     174:	e5801014 	str	r1, [r0, #20]

00000178 <cpu_sleep>:
     178:	ee070f90 	mcr	15, 0, r0, cr7, cr0, {4}
     17c:	eafffffd 	b	178 <cpu_sleep>
     180:	00001f7e 	.word	0x00001f7e
     184:	00400348 	.word	0x00400348
     188:	e5007000 	.word	0xe5007000

0000018c <cpu_init_mode>:
     18c:	e10f3000 	mrs	r3, CPSR
     190:	e121f001 	msr	CPSR_c, r1
     194:	e1a0d000 	mov	sp, r0
     198:	e12ff003 	msr	CPSR_fsxc, r3
     19c:	e0400102 	sub	r0, r0, r2, lsl #2
     1a0:	e12fff1e 	bx	lr

000001a4 <cpu_irq_disable>:
     1a4:	e10f0000 	mrs	r0, CPSR
     1a8:	e3801080 	orr	r1, r0, #128	; 0x80
     1ac:	e121f001 	msr	CPSR_c, r1
     1b0:	e12fff1e 	bx	lr

000001b4 <cpu_int_disable>:
     1b4:	e10f0000 	mrs	r0, CPSR
     1b8:	e38010c0 	orr	r1, r0, #192	; 0xc0
     1bc:	e121f001 	msr	CPSR_c, r1
     1c0:	e12fff1e 	bx	lr

000001c4 <cpu_int_restore>:
     1c4:	e12ff000 	msr	CPSR_fsxc, r0
     1c8:	e12fff1e 	bx	lr

000001cc <sark_lock_get>:
     1cc:	e3a0c4e2 	mov	ip, #-503316480	; 0xe2000000
     1d0:	e08cc100 	add	ip, ip, r0, lsl #2
     1d4:	e10f0000 	mrs	r0, CPSR
     1d8:	e38010c0 	orr	r1, r0, #192	; 0xc0
     1dc:	e121f001 	msr	CPSR_c, r1

000001e0 <lg1>:
     1e0:	e59c1100 	ldr	r1, [ip, #256]	; 0x100
     1e4:	e3110102 	tst	r1, #-2147483648	; 0x80000000
     1e8:	1afffffc 	bne	1e0 <lg1>
     1ec:	e12fff1e 	bx	lr

000001f0 <sark_lock_free>:
     1f0:	e3a0c4e2 	mov	ip, #-503316480	; 0xe2000000
     1f4:	e08c1101 	add	r1, ip, r1, lsl #2
     1f8:	e5911180 	ldr	r1, [r1, #384]	; 0x180
     1fc:	e121f000 	msr	CPSR_c, r0
     200:	e12fff1e 	bx	lr

00000204 <sark_str_cpy>:
     204:	e4d12001 	ldrb	r2, [r1], #1
     208:	e3520000 	cmp	r2, #0
     20c:	e4c02001 	strb	r2, [r0], #1
     210:	1afffffb 	bne	204 <sark_str_cpy>
     214:	e12fff1e 	bx	lr

00000218 <sark_word_set>:
     218:	e1a03001 	mov	r3, r1

0000021c <ws1>:
     21c:	e2522010 	subs	r2, r2, #16
     220:	28a0000a 	stmiacs	r0!, {r1, r3}
     224:	28a0000a 	stmiacs	r0!, {r1, r3}
     228:	2afffffb 	bcs	21c <ws1>
     22c:	e1b02e82 	lsls	r2, r2, #29
     230:	28a0000a 	stmiacs	r0!, {r1, r3}
     234:	48a00002 	stmiami	r0!, {r1}
     238:	e12fff1e 	bx	lr

0000023c <sark_msg_cpy>:
     23c:	e2800004 	add	r0, r0, #4
     240:	e2811004 	add	r1, r1, #4
     244:	e1d120b0 	ldrh	r2, [r1]
     248:	e2822004 	add	r2, r2, #4

0000024c <sark_word_cpy>:
     24c:	e3120003 	tst	r2, #3
     250:	13c22003 	bicne	r2, r2, #3
     254:	12822004 	addne	r2, r2, #4
     258:	e92d4010 	push	{r4, lr}
     25c:	e2522020 	subs	r2, r2, #32
     260:	3a000005 	bcc	27c <wc2>

00000264 <wc1>:
     264:	e8b15018 	ldm	r1!, {r3, r4, ip, lr}
     268:	e8a05018 	stmia	r0!, {r3, r4, ip, lr}
     26c:	e8b15018 	ldm	r1!, {r3, r4, ip, lr}
     270:	e8a05018 	stmia	r0!, {r3, r4, ip, lr}
     274:	e2522020 	subs	r2, r2, #32
     278:	2afffff9 	bcs	264 <wc1>

0000027c <wc2>:
     27c:	e1b0ce02 	lsls	ip, r2, #28
     280:	28b15018 	ldmcs	r1!, {r3, r4, ip, lr}
     284:	28a05018 	stmiacs	r0!, {r3, r4, ip, lr}
     288:	48b10018 	ldmmi	r1!, {r3, r4}
     28c:	48a00018 	stmiami	r0!, {r3, r4}
     290:	e1b0cf02 	lsls	ip, r2, #30
     294:	24913004 	ldrcs	r3, [r1], #4
     298:	24803004 	strcs	r3, [r0], #4
     29c:	e8bd8010 	pop	{r4, pc}

000002a0 <sark_delay_us>:
     2a0:	4903      	ldr	r1, [pc, #12]	; (2b0 <delay1+0x8>)
     2a2:	8809      	ldrh	r1, [r1, #0]
     2a4:	4341      	muls	r1, r0
     2a6:	0888      	lsrs	r0, r1, #2

000002a8 <delay1>:
     2a8:	3801      	subs	r0, #1
     2aa:	d2fd      	bcs.n	2a8 <delay1>
     2ac:	4770      	bx	lr
     2ae:	0000      	.short	0x0000
     2b0:	00400378 	.word	0x00400378

000002b4 <sark_div10>:
     2b4:	e241200a 	sub	r2, r1, #10
     2b8:	e0411121 	sub	r1, r1, r1, lsr #2
     2bc:	e0811221 	add	r1, r1, r1, lsr #4
     2c0:	e0811421 	add	r1, r1, r1, lsr #8
     2c4:	e0811821 	add	r1, r1, r1, lsr #16
     2c8:	e1a011a1 	lsr	r1, r1, #3
     2cc:	e0813101 	add	r3, r1, r1, lsl #2
     2d0:	e0522083 	subs	r2, r2, r3, lsl #1
     2d4:	52811001 	addpl	r1, r1, #1
     2d8:	4282200a 	addmi	r2, r2, #10
     2dc:	e8800006 	stm	r0, {r1, r2}
     2e0:	e12fff1e 	bx	lr

000002e4 <sark_int_han>:
     2e4:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
     2e8:	e24e0004 	sub	r0, lr, #4
     2ec:	e14fc000 	mrs	ip, SPSR
     2f0:	e321f01f 	msr	CPSR_c, #31
     2f4:	e92d5000 	push	{ip, lr}
     2f8:	fa00011b 	blx	76c <sark_int>
     2fc:	e8bd5000 	pop	{ip, lr}
     300:	e321f092 	msr	CPSR_c, #146	; 0x92
     304:	e16ff00c 	msr	SPSR_fsxc, ip
     308:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     30c:	e5800030 	str	r0, [r0, #48]	; 0x30
     310:	e8bd500f 	pop	{r0, r1, r2, r3, ip, lr}

00000314 <null_int_han>:
     314:	e25ef004 	subs	pc, lr, #4

00000318 <schedule>:
     318:	e92d5000 	push	{ip, lr}
     31c:	e10fc000 	mrs	ip, CPSR
     320:	e3cce01f 	bic	lr, ip, #31
     324:	e38ee01f 	orr	lr, lr, #31
     328:	e121f00e 	msr	CPSR_c, lr
     32c:	e92d5000 	push	{ip, lr}
     330:	fa0003a9 	blx	11dc <schedule_sysmode>
     334:	e8bd5000 	pop	{ip, lr}
     338:	e121f00c 	msr	CPSR_c, ip
     33c:	e8bd5000 	pop	{ip, lr}
     340:	e12fff1e 	bx	lr

00000344 <sark_aplx>:
     344:	b5f2      	push	{r1, r4, r5, r6, r7, lr}
     346:	4905      	ldr	r1, [pc, #20]	; (35c <aplx_buffer>)
     348:	a605      	add	r6, pc, #20	; (adr r6, 360 <aplx_loader>)
     34a:	2740      	movs	r7, #64	; 0x40

0000034c <aplx_l0>:
     34c:	ce3c      	ldmia	r6!, {r2, r3, r4, r5}
     34e:	c13c      	stmia	r1!, {r2, r3, r4, r5}
     350:	3f10      	subs	r7, #16
     352:	d1fb      	bne.n	34c <aplx_l0>
     354:	1c04      	adds	r4, r0, #0
     356:	393f      	subs	r1, #63	; 0x3f
     358:	4708      	bx	r1
	...

0000035c <aplx_buffer>:
     35c:	00007fc0 	.word	0x00007fc0

00000360 <aplx_loader>:
     360:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
     362:	2801      	cmp	r0, #1
     364:	d008      	beq.n	378 <aplx_copy>
     366:	2802      	cmp	r0, #2
     368:	d004      	beq.n	374 <aplx_rcopy>
     36a:	2803      	cmp	r0, #3
     36c:	d00b      	beq.n	386 <aplx_fill>
     36e:	2804      	cmp	r0, #4
     370:	d011      	beq.n	396 <aplx_exec>
     372:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

00000374 <aplx_rcopy>:
     374:	1912      	adds	r2, r2, r4
     376:	3a10      	subs	r2, #16

00000378 <aplx_copy>:
     378:	cae1      	ldmia	r2!, {r0, r5, r6, r7}
     37a:	c1e1      	stmia	r1!, {r0, r5, r6, r7}
     37c:	cae1      	ldmia	r2!, {r0, r5, r6, r7}
     37e:	c1e1      	stmia	r1!, {r0, r5, r6, r7}
     380:	3b20      	subs	r3, #32
     382:	d8f9      	bhi.n	378 <aplx_copy>
     384:	e7ec      	b.n	360 <aplx_loader>

00000386 <aplx_fill>:
     386:	1c1d      	adds	r5, r3, #0
     388:	1c1e      	adds	r6, r3, #0
     38a:	1c1f      	adds	r7, r3, #0

0000038c <aplx_l1>:
     38c:	c1e8      	stmia	r1!, {r3, r5, r6, r7}
     38e:	c1e8      	stmia	r1!, {r3, r5, r6, r7}
     390:	3a20      	subs	r2, #32
     392:	d8fb      	bhi.n	38c <aplx_l1>
     394:	e7e4      	b.n	360 <aplx_loader>

00000396 <aplx_exec>:
     396:	9800      	ldr	r0, [sp, #0]
     398:	4788      	blx	r1
     39a:	e7e1      	b.n	360 <aplx_loader>

0000039c <c_main>:
     39c:	e92d4800 	push	{fp, lr}
     3a0:	e28db004 	add	fp, sp, #4
     3a4:	e3a00002 	mov	r0, #2
     3a8:	e59f100c 	ldr	r1, [pc, #12]	; 3bc <c_main+0x20>
     3ac:	e3a02000 	mov	r2, #0
     3b0:	fa00033a 	blx	10a0 <spin1_callback_on>
     3b4:	e1a00003 	mov	r0, r3
     3b8:	e8bd8800 	pop	{fp, pc}
     3bc:	000003c0 	.word	0x000003c0

000003c0 <timer_callback>:
     3c0:	e92d4800 	push	{fp, lr}
     3c4:	e28db004 	add	fp, sp, #4
     3c8:	e24dd010 	sub	sp, sp, #16
     3cc:	e50b0010 	str	r0, [fp, #-16]
     3d0:	e50b1014 	str	r1, [fp, #-20]
     3d4:	e3a03901 	mov	r3, #16384	; 0x4000
     3d8:	e50b3008 	str	r3, [fp, #-8]
     3dc:	e51b0008 	ldr	r0, [fp, #-8]
     3e0:	eb000450 	bl	1528 <__gnu_fractunssasi>
     3e4:	e1a03000 	mov	r3, r0
     3e8:	e3a00000 	mov	r0, #0
     3ec:	e1a01003 	mov	r1, r3
     3f0:	e3a02001 	mov	r2, #1
     3f4:	fa00033c 	blx	10ec <spin1_send_mc_packet>
     3f8:	e24bd004 	sub	sp, fp, #4
     3fc:	e8bd8800 	pop	{fp, pc}

00000400 <rte_handler>:
     400:	4b01      	ldr	r3, [pc, #4]	; (408 <MC_TABLE_SIZE+0x8>)
     402:	2208      	movs	r2, #8
     404:	701a      	strb	r2, [r3, #0]
     406:	4770      	bx	lr
     408:	e5007f2b 	.word	0xe5007f2b

0000040c <sark_block_init>:
     40c:	b530      	push	{r4, r5, lr}
     40e:	1c0b      	adds	r3, r1, #0
     410:	1c04      	adds	r4, r0, #0
     412:	3b01      	subs	r3, #1
     414:	2b00      	cmp	r3, #0
     416:	d003      	beq.n	420 <sark_block_init+0x14>
     418:	18a5      	adds	r5, r4, r2
     41a:	6025      	str	r5, [r4, #0]
     41c:	1c2c      	adds	r4, r5, #0
     41e:	e7f8      	b.n	412 <sark_block_init+0x6>
     420:	3901      	subs	r1, #1
     422:	434a      	muls	r2, r1
     424:	1880      	adds	r0, r0, r2
     426:	6003      	str	r3, [r0, #0]
     428:	bd30      	pop	{r4, r5, pc}
	...

0000042c <sark_msg_get>:
     42c:	b510      	push	{r4, lr}
     42e:	f7ff eec2 	blx	1b4 <cpu_int_disable>
     432:	4b09      	ldr	r3, [pc, #36]	; (458 <sark_msg_get+0x2c>)
     434:	6a1c      	ldr	r4, [r3, #32]
     436:	2c00      	cmp	r4, #0
     438:	d00a      	beq.n	450 <sark_msg_get+0x24>
     43a:	6822      	ldr	r2, [r4, #0]
     43c:	621a      	str	r2, [r3, #32]
     43e:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
     440:	8cd9      	ldrh	r1, [r3, #38]	; 0x26
     442:	3201      	adds	r2, #1
     444:	0412      	lsls	r2, r2, #16
     446:	0c12      	lsrs	r2, r2, #16
     448:	849a      	strh	r2, [r3, #36]	; 0x24
     44a:	4291      	cmp	r1, r2
     44c:	d200      	bcs.n	450 <sark_msg_get+0x24>
     44e:	84da      	strh	r2, [r3, #38]	; 0x26
     450:	f7ff eeb8 	blx	1c4 <cpu_int_restore>
     454:	1c20      	adds	r0, r4, #0
     456:	bd10      	pop	{r4, pc}
     458:	00400348 	.word	0x00400348

0000045c <sark_msg_free>:
     45c:	b510      	push	{r4, lr}
     45e:	1c04      	adds	r4, r0, #0
     460:	f7ff eea8 	blx	1b4 <cpu_int_disable>
     464:	4b04      	ldr	r3, [pc, #16]	; (478 <sark_msg_free+0x1c>)
     466:	6a1a      	ldr	r2, [r3, #32]
     468:	6022      	str	r2, [r4, #0]
     46a:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
     46c:	621c      	str	r4, [r3, #32]
     46e:	3a01      	subs	r2, #1
     470:	849a      	strh	r2, [r3, #36]	; 0x24
     472:	f7ff eea8 	blx	1c4 <cpu_int_restore>
     476:	bd10      	pop	{r4, pc}
     478:	00400348 	.word	0x00400348

0000047c <sark_shmsg_get>:
     47c:	b510      	push	{r4, lr}
     47e:	2000      	movs	r0, #0
     480:	f7ff eea4 	blx	1cc <sark_lock_get>
     484:	4b09      	ldr	r3, [pc, #36]	; (4ac <sark_shmsg_get+0x30>)
     486:	681c      	ldr	r4, [r3, #0]
     488:	2c00      	cmp	r4, #0
     48a:	d00a      	beq.n	4a2 <sark_shmsg_get+0x26>
     48c:	6822      	ldr	r2, [r4, #0]
     48e:	601a      	str	r2, [r3, #0]
     490:	889a      	ldrh	r2, [r3, #4]
     492:	88d9      	ldrh	r1, [r3, #6]
     494:	3201      	adds	r2, #1
     496:	0412      	lsls	r2, r2, #16
     498:	0c12      	lsrs	r2, r2, #16
     49a:	809a      	strh	r2, [r3, #4]
     49c:	4291      	cmp	r1, r2
     49e:	d200      	bcs.n	4a2 <sark_shmsg_get+0x26>
     4a0:	80da      	strh	r2, [r3, #6]
     4a2:	2100      	movs	r1, #0
     4a4:	f7ff eea4 	blx	1f0 <sark_lock_free>
     4a8:	1c20      	adds	r0, r4, #0
     4aa:	bd10      	pop	{r4, pc}
     4ac:	e5007f68 	.word	0xe5007f68

000004b0 <sark_shmsg_free>:
     4b0:	b510      	push	{r4, lr}
     4b2:	1c04      	adds	r4, r0, #0
     4b4:	2000      	movs	r0, #0
     4b6:	f7ff ee8a 	blx	1cc <sark_lock_get>
     4ba:	4b05      	ldr	r3, [pc, #20]	; (4d0 <sark_shmsg_free+0x20>)
     4bc:	2100      	movs	r1, #0
     4be:	681a      	ldr	r2, [r3, #0]
     4c0:	6022      	str	r2, [r4, #0]
     4c2:	889a      	ldrh	r2, [r3, #4]
     4c4:	601c      	str	r4, [r3, #0]
     4c6:	3a01      	subs	r2, #1
     4c8:	809a      	strh	r2, [r3, #4]
     4ca:	f7ff ee92 	blx	1f0 <sark_lock_free>
     4ce:	bd10      	pop	{r4, pc}
     4d0:	e5007f68 	.word	0xe5007f68

000004d4 <sark_init>:
     4d4:	b570      	push	{r4, r5, r6, lr}
     4d6:	2520      	movs	r5, #32
     4d8:	8c2b      	ldrh	r3, [r5, #32]
     4da:	8c6a      	ldrh	r2, [r5, #34]	; 0x22
     4dc:	009b      	lsls	r3, r3, #2
     4de:	1ac0      	subs	r0, r0, r3
     4e0:	21d2      	movs	r1, #210	; 0xd2
     4e2:	f7ff ee54 	blx	18c <cpu_init_mode>
     4e6:	8caa      	ldrh	r2, [r5, #36]	; 0x24
     4e8:	21d1      	movs	r1, #209	; 0xd1
     4ea:	f7ff ee50 	blx	18c <cpu_init_mode>
     4ee:	8cea      	ldrh	r2, [r5, #38]	; 0x26
     4f0:	21df      	movs	r1, #223	; 0xdf
     4f2:	f7ff ee4c 	blx	18c <cpu_init_mode>
     4f6:	4c28      	ldr	r4, [pc, #160]	; (598 <sark_init+0xc4>)
     4f8:	2656      	movs	r6, #86	; 0x56
     4fa:	1c01      	adds	r1, r0, #0
     4fc:	6120      	str	r0, [r4, #16]
     4fe:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
     500:	6160      	str	r0, [r4, #20]
     502:	f000 fb69 	bl	bd8 <sark_heap_init>
     506:	4b25      	ldr	r3, [pc, #148]	; (59c <sark_init+0xc8>)
     508:	4a25      	ldr	r2, [pc, #148]	; (5a0 <SPARE_SIZE>)
     50a:	681b      	ldr	r3, [r3, #0]
     50c:	4d25      	ldr	r5, [pc, #148]	; (5a4 <SPARE_SIZE+0x4>)
     50e:	0e1b      	lsrs	r3, r3, #24
     510:	6063      	str	r3, [r4, #4]
     512:	189b      	adds	r3, r3, r2
     514:	2192      	movs	r1, #146	; 0x92
     516:	0049      	lsls	r1, r1, #1
     518:	61a0      	str	r0, [r4, #24]
     51a:	791b      	ldrb	r3, [r3, #4]
     51c:	6023      	str	r3, [r4, #0]
     51e:	8cab      	ldrh	r3, [r5, #36]	; 0x24
     520:	8623      	strh	r3, [r4, #48]	; 0x30
     522:	4b21      	ldr	r3, [pc, #132]	; (5a8 <SPARE_SIZE+0x8>)
     524:	60a3      	str	r3, [r4, #8]
     526:	7830      	ldrb	r0, [r6, #0]
     528:	f000 fb4a 	bl	bc0 <sark_alloc>
     52c:	2292      	movs	r2, #146	; 0x92
     52e:	0052      	lsls	r2, r2, #1
     530:	6220      	str	r0, [r4, #32]
     532:	7831      	ldrb	r1, [r6, #0]
     534:	f7ff ff6a 	bl	40c <sark_block_init>
     538:	6823      	ldr	r3, [r4, #0]
     53a:	2b11      	cmp	r3, #17
     53c:	d81c      	bhi.n	578 <sark_init+0xa4>
     53e:	4a1b      	ldr	r2, [pc, #108]	; (5ac <SPARE_SIZE+0xc>)
     540:	01d8      	lsls	r0, r3, #7
     542:	1880      	adds	r0, r0, r2
     544:	6daa      	ldr	r2, [r5, #88]	; 0x58
     546:	61e0      	str	r0, [r4, #28]
     548:	4353      	muls	r3, r2
     54a:	6d6a      	ldr	r2, [r5, #84]	; 0x54
     54c:	009b      	lsls	r3, r3, #2
     54e:	18d3      	adds	r3, r2, r3
     550:	2100      	movs	r1, #0
     552:	2270      	movs	r2, #112	; 0x70
     554:	6363      	str	r3, [r4, #52]	; 0x34
     556:	f7ff ee60 	blx	218 <sark_word_set>
     55a:	69e0      	ldr	r0, [r4, #28]
     55c:	2359      	movs	r3, #89	; 0x59
     55e:	781a      	ldrb	r2, [r3, #0]
     560:	1c03      	adds	r3, r0, #0
     562:	332f      	adds	r3, #47	; 0x2f
     564:	701a      	strb	r2, [r3, #0]
     566:	3b01      	subs	r3, #1
     568:	2204      	movs	r2, #4
     56a:	701a      	strb	r2, [r3, #0]
     56c:	69ed      	ldr	r5, [r5, #28]
     56e:	6445      	str	r5, [r0, #68]	; 0x44
     570:	490f      	ldr	r1, [pc, #60]	; (5b0 <SPARE_SIZE+0x10>)
     572:	3048      	adds	r0, #72	; 0x48
     574:	f7ff ee46 	blx	204 <sark_str_cpy>
     578:	f000 f9f0 	bl	95c <sark_vic_init>
     57c:	2357      	movs	r3, #87	; 0x57
     57e:	7818      	ldrb	r0, [r3, #0]
     580:	2112      	movs	r1, #18
     582:	2201      	movs	r2, #1
     584:	4b0b      	ldr	r3, [pc, #44]	; (5b4 <SPARE_SIZE+0x14>)
     586:	f000 fa11 	bl	9ac <sark_vic_set>
     58a:	2358      	movs	r3, #88	; 0x58
     58c:	7818      	ldrb	r0, [r3, #0]
     58e:	f000 f9c7 	bl	920 <event_alloc>
     592:	201f      	movs	r0, #31
     594:	bd70      	pop	{r4, r5, r6, pc}
     596:	46c0      	nop			; (mov r8, r8)
     598:	00400348 	.word	0x00400348
     59c:	40000014 	.word	0x40000014
     5a0:	e5007f90 	.word	0xe5007f90
     5a4:	e5007f00 	.word	0xe5007f00
     5a8:	deaddead 	.word	0xdeaddead
     5ac:	e5007000 	.word	0xe5007000
     5b0:	0000154c 	.word	0x0000154c
     5b4:	000002e4 	.word	0x000002e4

000005b8 <sark_msg_send>:
     5b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     5ba:	1c05      	adds	r5, r0, #0
     5bc:	1c0f      	adds	r7, r1, #0
     5be:	f7ff ff5d 	bl	47c <sark_shmsg_get>
     5c2:	1c04      	adds	r4, r0, #0
     5c4:	2c00      	cmp	r4, #0
     5c6:	d038      	beq.n	63a <ETH_TX_SIZE+0x3a>
     5c8:	1c29      	adds	r1, r5, #0
     5ca:	f7ff ee38 	blx	23c <sark_msg_cpy>
     5ce:	4e1b      	ldr	r6, [pc, #108]	; (63c <ETH_TX_SIZE+0x3c>)
     5d0:	2501      	movs	r5, #1
     5d2:	69f3      	ldr	r3, [r6, #28]
     5d4:	1c28      	adds	r0, r5, #0
     5d6:	635c      	str	r4, [r3, #52]	; 0x34
     5d8:	3339      	adds	r3, #57	; 0x39
     5da:	701d      	strb	r5, [r3, #0]
     5dc:	f7ff edf6 	blx	1cc <sark_lock_get>
     5e0:	4a17      	ldr	r2, [pc, #92]	; (640 <ETH_TX_SIZE+0x40>)
     5e2:	6833      	ldr	r3, [r6, #0]
     5e4:	6c51      	ldr	r1, [r2, #68]	; 0x44
     5e6:	468c      	mov	ip, r1
     5e8:	1c29      	adds	r1, r5, #0
     5ea:	4099      	lsls	r1, r3
     5ec:	4663      	mov	r3, ip
     5ee:	4319      	orrs	r1, r3
     5f0:	6451      	str	r1, [r2, #68]	; 0x44
     5f2:	2b00      	cmp	r3, #0
     5f4:	d106      	bne.n	604 <ETH_TX_SIZE+0x4>
     5f6:	4b13      	ldr	r3, [pc, #76]	; (644 <ETH_TX_SIZE+0x44>)
     5f8:	4913      	ldr	r1, [pc, #76]	; (648 <ETH_TX_SIZE+0x48>)
     5fa:	781b      	ldrb	r3, [r3, #0]
     5fc:	409d      	lsls	r5, r3
     5fe:	4b13      	ldr	r3, [pc, #76]	; (64c <ETH_TX_SIZE+0x4c>)
     600:	186d      	adds	r5, r5, r1
     602:	601d      	str	r5, [r3, #0]
     604:	2101      	movs	r1, #1
     606:	f7ff edf4 	blx	1f0 <sark_lock_free>
     60a:	4a11      	ldr	r2, [pc, #68]	; (650 <ETH_TX_SIZE+0x50>)
     60c:	69f3      	ldr	r3, [r6, #28]
     60e:	6810      	ldr	r0, [r2, #0]
     610:	6b99      	ldr	r1, [r3, #56]	; 0x38
     612:	0409      	lsls	r1, r1, #16
     614:	0e09      	lsrs	r1, r1, #24
     616:	d003      	beq.n	620 <ETH_TX_SIZE+0x20>
     618:	6811      	ldr	r1, [r2, #0]
     61a:	1a09      	subs	r1, r1, r0
     61c:	42b9      	cmp	r1, r7
     61e:	d9f7      	bls.n	610 <ETH_TX_SIZE+0x10>
     620:	6b9b      	ldr	r3, [r3, #56]	; 0x38
     622:	041b      	lsls	r3, r3, #16
     624:	0e1b      	lsrs	r3, r3, #24
     626:	d004      	beq.n	632 <ETH_TX_SIZE+0x32>
     628:	1c20      	adds	r0, r4, #0
     62a:	f7ff ff41 	bl	4b0 <sark_shmsg_free>
     62e:	2000      	movs	r0, #0
     630:	e003      	b.n	63a <ETH_TX_SIZE+0x3a>
     632:	6af3      	ldr	r3, [r6, #44]	; 0x2c
     634:	2001      	movs	r0, #1
     636:	3301      	adds	r3, #1
     638:	62f3      	str	r3, [r6, #44]	; 0x2c
     63a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     63c:	00400348 	.word	0x00400348
     640:	e5007f00 	.word	0xe5007f00
     644:	e5007fa8 	.word	0xe5007fa8
     648:	5ec00000 	.word	0x5ec00000
     64c:	e2000008 	.word	0xe2000008
     650:	e5007f10 	.word	0xe5007f10

00000654 <sark_cmd_ver>:
     654:	b508      	push	{r3, lr}
     656:	4b0a      	ldr	r3, [pc, #40]	; (680 <sark_cmd_ver+0x2c>)
     658:	6859      	ldr	r1, [r3, #4]
     65a:	681b      	ldr	r3, [r3, #0]
     65c:	020a      	lsls	r2, r1, #8
     65e:	18d3      	adds	r3, r2, r3
     660:	4a08      	ldr	r2, [pc, #32]	; (684 <sark_cmd_ver+0x30>)
     662:	4909      	ldr	r1, [pc, #36]	; (688 <sark_cmd_ver+0x34>)
     664:	8812      	ldrh	r2, [r2, #0]
     666:	0412      	lsls	r2, r2, #16
     668:	189b      	adds	r3, r3, r2
     66a:	6143      	str	r3, [r0, #20]
     66c:	4b07      	ldr	r3, [pc, #28]	; (68c <sark_cmd_ver+0x38>)
     66e:	6183      	str	r3, [r0, #24]
     670:	4b07      	ldr	r3, [pc, #28]	; (690 <sark_cmd_ver+0x3c>)
     672:	681b      	ldr	r3, [r3, #0]
     674:	61c3      	str	r3, [r0, #28]
     676:	3020      	adds	r0, #32
     678:	f7ff edc4 	blx	204 <sark_str_cpy>
     67c:	201b      	movs	r0, #27
     67e:	bd08      	pop	{r3, pc}
     680:	00400348 	.word	0x00400348
     684:	e5007f00 	.word	0xe5007f00
     688:	0000155c 	.word	0x0000155c
     68c:	00780100 	.word	0x00780100
     690:	00001548 	.word	0x00001548

00000694 <sark_cmd_read>:
     694:	6983      	ldr	r3, [r0, #24]
     696:	2280      	movs	r2, #128	; 0x80
     698:	b510      	push	{r4, lr}
     69a:	69c1      	ldr	r1, [r0, #28]
     69c:	0052      	lsls	r2, r2, #1
     69e:	4293      	cmp	r3, r2
     6a0:	d801      	bhi.n	6a6 <ZI_LENGTH+0xe>
     6a2:	2902      	cmp	r1, #2
     6a4:	d903      	bls.n	6ae <ZI_LENGTH+0x16>
     6a6:	2384      	movs	r3, #132	; 0x84
     6a8:	8203      	strh	r3, [r0, #16]
     6aa:	2000      	movs	r0, #0
     6ac:	e022      	b.n	6f4 <ZI_LENGTH+0x5c>
     6ae:	6942      	ldr	r2, [r0, #20]
     6b0:	3014      	adds	r0, #20
     6b2:	2900      	cmp	r1, #0
     6b4:	d107      	bne.n	6c6 <ZI_LENGTH+0x2e>
     6b6:	18d1      	adds	r1, r2, r3
     6b8:	1a80      	subs	r0, r0, r2
     6ba:	428a      	cmp	r2, r1
     6bc:	d019      	beq.n	6f2 <ZI_LENGTH+0x5a>
     6be:	7814      	ldrb	r4, [r2, #0]
     6c0:	5484      	strb	r4, [r0, r2]
     6c2:	3201      	adds	r2, #1
     6c4:	e7f9      	b.n	6ba <ZI_LENGTH+0x22>
     6c6:	2901      	cmp	r1, #1
     6c8:	d109      	bne.n	6de <ZI_LENGTH+0x46>
     6ca:	0859      	lsrs	r1, r3, #1
     6cc:	0049      	lsls	r1, r1, #1
     6ce:	1889      	adds	r1, r1, r2
     6d0:	1a80      	subs	r0, r0, r2
     6d2:	428a      	cmp	r2, r1
     6d4:	d00d      	beq.n	6f2 <ZI_LENGTH+0x5a>
     6d6:	8814      	ldrh	r4, [r2, #0]
     6d8:	5284      	strh	r4, [r0, r2]
     6da:	3202      	adds	r2, #2
     6dc:	e7f9      	b.n	6d2 <ZI_LENGTH+0x3a>
     6de:	0899      	lsrs	r1, r3, #2
     6e0:	0089      	lsls	r1, r1, #2
     6e2:	1889      	adds	r1, r1, r2
     6e4:	1a80      	subs	r0, r0, r2
     6e6:	428a      	cmp	r2, r1
     6e8:	d003      	beq.n	6f2 <ZI_LENGTH+0x5a>
     6ea:	6814      	ldr	r4, [r2, #0]
     6ec:	5084      	str	r4, [r0, r2]
     6ee:	3204      	adds	r2, #4
     6f0:	e7f9      	b.n	6e6 <ZI_LENGTH+0x4e>
     6f2:	1c18      	adds	r0, r3, #0
     6f4:	bd10      	pop	{r4, pc}

000006f6 <sark_cmd_write>:
     6f6:	6983      	ldr	r3, [r0, #24]
     6f8:	2280      	movs	r2, #128	; 0x80
     6fa:	b530      	push	{r4, r5, lr}
     6fc:	69c1      	ldr	r1, [r0, #28]
     6fe:	0052      	lsls	r2, r2, #1
     700:	4293      	cmp	r3, r2
     702:	d801      	bhi.n	708 <sark_cmd_write+0x12>
     704:	2902      	cmp	r1, #2
     706:	d902      	bls.n	70e <sark_cmd_write+0x18>
     708:	2384      	movs	r3, #132	; 0x84
     70a:	8203      	strh	r3, [r0, #16]
     70c:	e024      	b.n	758 <sark_cmd_write+0x62>
     70e:	6942      	ldr	r2, [r0, #20]
     710:	3020      	adds	r0, #32
     712:	2900      	cmp	r1, #0
     714:	d108      	bne.n	728 <sark_cmd_write+0x32>
     716:	18c1      	adds	r1, r0, r3
     718:	1c03      	adds	r3, r0, #0
     71a:	428b      	cmp	r3, r1
     71c:	d01c      	beq.n	758 <sark_cmd_write+0x62>
     71e:	781d      	ldrb	r5, [r3, #0]
     720:	1a1c      	subs	r4, r3, r0
     722:	54a5      	strb	r5, [r4, r2]
     724:	3301      	adds	r3, #1
     726:	e7f8      	b.n	71a <sark_cmd_write+0x24>
     728:	2901      	cmp	r1, #1
     72a:	d10a      	bne.n	742 <sark_cmd_write+0x4c>
     72c:	0859      	lsrs	r1, r3, #1
     72e:	0049      	lsls	r1, r1, #1
     730:	1841      	adds	r1, r0, r1
     732:	1c03      	adds	r3, r0, #0
     734:	428b      	cmp	r3, r1
     736:	d00f      	beq.n	758 <sark_cmd_write+0x62>
     738:	881d      	ldrh	r5, [r3, #0]
     73a:	1a1c      	subs	r4, r3, r0
     73c:	52a5      	strh	r5, [r4, r2]
     73e:	3302      	adds	r3, #2
     740:	e7f8      	b.n	734 <sark_cmd_write+0x3e>
     742:	0899      	lsrs	r1, r3, #2
     744:	0089      	lsls	r1, r1, #2
     746:	1841      	adds	r1, r0, r1
     748:	1c03      	adds	r3, r0, #0
     74a:	428b      	cmp	r3, r1
     74c:	d004      	beq.n	758 <sark_cmd_write+0x62>
     74e:	1a1c      	subs	r4, r3, r0
     750:	681d      	ldr	r5, [r3, #0]
     752:	50a5      	str	r5, [r4, r2]
     754:	3304      	adds	r3, #4
     756:	e7f8      	b.n	74a <sark_cmd_write+0x54>
     758:	2000      	movs	r0, #0
     75a:	bd30      	pop	{r4, r5, pc}

0000075c <sark_cmd_fill>:
     75c:	b508      	push	{r3, lr}
     75e:	1c03      	adds	r3, r0, #0
     760:	3314      	adds	r3, #20
     762:	cb07      	ldmia	r3!, {r0, r1, r2}
     764:	f7ff ed58 	blx	218 <sark_word_set>
     768:	2000      	movs	r0, #0
     76a:	bd08      	pop	{r3, pc}

0000076c <sark_int>:
     76c:	b570      	push	{r4, r5, r6, lr}
     76e:	4e52      	ldr	r6, [pc, #328]	; (8b8 <STACK_SIZE+0xb8>)
     770:	2201      	movs	r2, #1
     772:	6873      	ldr	r3, [r6, #4]
     774:	409a      	lsls	r2, r3
     776:	4b51      	ldr	r3, [pc, #324]	; (8bc <STACK_SIZE+0xbc>)
     778:	18d2      	adds	r2, r2, r3
     77a:	4b51      	ldr	r3, [pc, #324]	; (8c0 <STACK_SIZE+0xc0>)
     77c:	601a      	str	r2, [r3, #0]
     77e:	69f2      	ldr	r2, [r6, #28]
     780:	6b93      	ldr	r3, [r2, #56]	; 0x38
     782:	6b15      	ldr	r5, [r2, #48]	; 0x30
     784:	061b      	lsls	r3, r3, #24
     786:	0e1b      	lsrs	r3, r3, #24
     788:	2b03      	cmp	r3, #3
     78a:	d100      	bne.n	78e <sark_int+0x22>
     78c:	6310      	str	r0, [r2, #48]	; 0x30
     78e:	3238      	adds	r2, #56	; 0x38
     790:	2000      	movs	r0, #0
     792:	7010      	strb	r0, [r2, #0]
     794:	2b01      	cmp	r3, #1
     796:	d167      	bne.n	868 <STACK_SIZE+0x68>
     798:	f7ff fe48 	bl	42c <sark_msg_get>
     79c:	1e04      	subs	r4, r0, #0
     79e:	d05f      	beq.n	860 <STACK_SIZE+0x60>
     7a0:	1c29      	adds	r1, r5, #0
     7a2:	f7ff ed4c 	blx	23c <sark_msg_cpy>
     7a6:	1c28      	adds	r0, r5, #0
     7a8:	f7ff fe82 	bl	4b0 <sark_shmsg_free>
     7ac:	6ab3      	ldr	r3, [r6, #40]	; 0x28
     7ae:	7aa5      	ldrb	r5, [r4, #10]
     7b0:	3301      	adds	r3, #1
     7b2:	62b3      	str	r3, [r6, #40]	; 0x28
     7b4:	1c28      	adds	r0, r5, #0
     7b6:	231f      	movs	r3, #31
     7b8:	4398      	bics	r0, r3
     7ba:	d130      	bne.n	81e <STACK_SIZE+0x1e>
     7bc:	88a3      	ldrh	r3, [r4, #4]
     7be:	2b17      	cmp	r3, #23
     7c0:	d801      	bhi.n	7c6 <sark_int+0x5a>
     7c2:	2381      	movs	r3, #129	; 0x81
     7c4:	e01b      	b.n	7fe <sark_int+0x92>
     7c6:	8a23      	ldrh	r3, [r4, #16]
     7c8:	2280      	movs	r2, #128	; 0x80
     7ca:	8222      	strh	r2, [r4, #16]
     7cc:	2b00      	cmp	r3, #0
     7ce:	d103      	bne.n	7d8 <sark_int+0x6c>
     7d0:	1c20      	adds	r0, r4, #0
     7d2:	f7ff ff3f 	bl	654 <sark_cmd_ver>
     7d6:	e013      	b.n	800 <STACK_SIZE>
     7d8:	2b02      	cmp	r3, #2
     7da:	d103      	bne.n	7e4 <sark_int+0x78>
     7dc:	1c20      	adds	r0, r4, #0
     7de:	f7ff ff59 	bl	694 <sark_cmd_read>
     7e2:	e00d      	b.n	800 <STACK_SIZE>
     7e4:	2b03      	cmp	r3, #3
     7e6:	d103      	bne.n	7f0 <sark_int+0x84>
     7e8:	1c20      	adds	r0, r4, #0
     7ea:	f7ff ff84 	bl	6f6 <sark_cmd_write>
     7ee:	e007      	b.n	800 <STACK_SIZE>
     7f0:	2b05      	cmp	r3, #5
     7f2:	d103      	bne.n	7fc <sark_int+0x90>
     7f4:	1c20      	adds	r0, r4, #0
     7f6:	f7ff ffb1 	bl	75c <sark_cmd_fill>
     7fa:	e001      	b.n	800 <STACK_SIZE>
     7fc:	2383      	movs	r3, #131	; 0x83
     7fe:	8223      	strh	r3, [r4, #16]
     800:	7aa2      	ldrb	r2, [r4, #10]
     802:	7ae1      	ldrb	r1, [r4, #11]
     804:	89a3      	ldrh	r3, [r4, #12]
     806:	300c      	adds	r0, #12
     808:	72e2      	strb	r2, [r4, #11]
     80a:	89e2      	ldrh	r2, [r4, #14]
     80c:	80a0      	strh	r0, [r4, #4]
     80e:	72a1      	strb	r1, [r4, #10]
     810:	81a2      	strh	r2, [r4, #12]
     812:	81e3      	strh	r3, [r4, #14]
     814:	1c20      	adds	r0, r4, #0
     816:	210a      	movs	r1, #10
     818:	f7ff fece 	bl	5b8 <sark_msg_send>
     81c:	e01c      	b.n	858 <STACK_SIZE+0x58>
     81e:	235a      	movs	r3, #90	; 0x5a
     820:	781b      	ldrb	r3, [r3, #0]
     822:	2b00      	cmp	r3, #0
     824:	d00f      	beq.n	846 <STACK_SIZE+0x46>
     826:	4b27      	ldr	r3, [pc, #156]	; (8c4 <STACK_SIZE+0xc4>)
     828:	699b      	ldr	r3, [r3, #24]
     82a:	2b00      	cmp	r3, #0
     82c:	d014      	beq.n	858 <STACK_SIZE+0x58>
     82e:	f7ff ecc2 	blx	1b4 <cpu_int_disable>
     832:	096a      	lsrs	r2, r5, #5
     834:	1c21      	adds	r1, r4, #0
     836:	1c06      	adds	r6, r0, #0
     838:	2003      	movs	r0, #3
     83a:	f000 fccf 	bl	11dc <schedule_sysmode>
     83e:	1c30      	adds	r0, r6, #0
     840:	f7ff ecc0 	blx	1c4 <cpu_int_restore>
     844:	e036      	b.n	8b4 <STACK_SIZE+0xb4>
     846:	4b20      	ldr	r3, [pc, #128]	; (8c8 <STACK_SIZE+0xc8>)
     848:	681a      	ldr	r2, [r3, #0]
     84a:	2380      	movs	r3, #128	; 0x80
     84c:	055b      	lsls	r3, r3, #21
     84e:	421a      	tst	r2, r3
     850:	d002      	beq.n	858 <STACK_SIZE+0x58>
     852:	4a1e      	ldr	r2, [pc, #120]	; (8cc <STACK_SIZE+0xcc>)
     854:	6294      	str	r4, [r2, #40]	; 0x28
     856:	e02b      	b.n	8b0 <STACK_SIZE+0xb0>
     858:	1c20      	adds	r0, r4, #0
     85a:	f7ff fdff 	bl	45c <sark_msg_free>
     85e:	e029      	b.n	8b4 <STACK_SIZE+0xb4>
     860:	1c28      	adds	r0, r5, #0
     862:	f7ff fe25 	bl	4b0 <sark_shmsg_free>
     866:	e025      	b.n	8b4 <STACK_SIZE+0xb4>
     868:	2b02      	cmp	r3, #2
     86a:	d108      	bne.n	87e <STACK_SIZE+0x7e>
     86c:	f7ff eca2 	blx	1b4 <cpu_int_disable>
     870:	69f3      	ldr	r3, [r6, #28]
     872:	1c28      	adds	r0, r5, #0
     874:	332f      	adds	r3, #47	; 0x2f
     876:	7819      	ldrb	r1, [r3, #0]
     878:	f7ff fd64 	bl	344 <sark_aplx>
     87c:	e01a      	b.n	8b4 <STACK_SIZE+0xb4>
     87e:	2b05      	cmp	r3, #5
     880:	d101      	bne.n	886 <STACK_SIZE+0x86>
     882:	2001      	movs	r0, #1
     884:	e001      	b.n	88a <STACK_SIZE+0x8a>
     886:	2b06      	cmp	r3, #6
     888:	d102      	bne.n	890 <STACK_SIZE+0x90>
     88a:	f000 f823 	bl	8d4 <event_pause>
     88e:	e011      	b.n	8b4 <STACK_SIZE+0xb4>
     890:	2b04      	cmp	r3, #4
     892:	d103      	bne.n	89c <STACK_SIZE+0x9c>
     894:	20ff      	movs	r0, #255	; 0xff
     896:	f000 f837 	bl	908 <event_stop>
     89a:	e00b      	b.n	8b4 <STACK_SIZE+0xb4>
     89c:	2b07      	cmp	r3, #7
     89e:	d109      	bne.n	8b4 <STACK_SIZE+0xb4>
     8a0:	4b09      	ldr	r3, [pc, #36]	; (8c8 <STACK_SIZE+0xc8>)
     8a2:	681a      	ldr	r2, [r3, #0]
     8a4:	2380      	movs	r3, #128	; 0x80
     8a6:	059b      	lsls	r3, r3, #22
     8a8:	421a      	tst	r2, r3
     8aa:	d003      	beq.n	8b4 <STACK_SIZE+0xb4>
     8ac:	4a07      	ldr	r2, [pc, #28]	; (8cc <STACK_SIZE+0xcc>)
     8ae:	62d5      	str	r5, [r2, #44]	; 0x2c
     8b0:	4a07      	ldr	r2, [pc, #28]	; (8d0 <STACK_SIZE+0xd0>)
     8b2:	6013      	str	r3, [r2, #0]
     8b4:	bd70      	pop	{r4, r5, r6, pc}
     8b6:	46c0      	nop			; (mov r8, r8)
     8b8:	00400348 	.word	0x00400348
     8bc:	5ec00000 	.word	0x5ec00000
     8c0:	e200000c 	.word	0xe200000c
     8c4:	004005ac 	.word	0x004005ac
     8c8:	2f000010 	.word	0x2f000010
     8cc:	00400380 	.word	0x00400380
     8d0:	2f000018 	.word	0x2f000018

000008d4 <event_pause>:
     8d4:	b508      	push	{r3, lr}
     8d6:	4a0a      	ldr	r2, [pc, #40]	; (900 <event_pause+0x2c>)
     8d8:	4b0a      	ldr	r3, [pc, #40]	; (904 <event_pause+0x30>)
     8da:	2800      	cmp	r0, #0
     8dc:	d005      	beq.n	8ea <event_pause+0x16>
     8de:	69d2      	ldr	r2, [r2, #28]
     8e0:	2101      	movs	r1, #1
     8e2:	7619      	strb	r1, [r3, #24]
     8e4:	322e      	adds	r2, #46	; 0x2e
     8e6:	2109      	movs	r1, #9
     8e8:	e003      	b.n	8f2 <event_pause+0x1e>
     8ea:	69d2      	ldr	r2, [r2, #28]
     8ec:	2105      	movs	r1, #5
     8ee:	322e      	adds	r2, #46	; 0x2e
     8f0:	7618      	strb	r0, [r3, #24]
     8f2:	7011      	strb	r1, [r2, #0]
     8f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
     8f6:	2a00      	cmp	r2, #0
     8f8:	d001      	beq.n	8fe <event_pause+0x2a>
     8fa:	6b59      	ldr	r1, [r3, #52]	; 0x34
     8fc:	4790      	blx	r2
     8fe:	bd08      	pop	{r3, pc}
     900:	00400348 	.word	0x00400348
     904:	00400380 	.word	0x00400380

00000908 <event_stop>:
     908:	4b03      	ldr	r3, [pc, #12]	; (918 <event_stop+0x10>)
     90a:	2202      	movs	r2, #2
     90c:	761a      	strb	r2, [r3, #24]
     90e:	4a03      	ldr	r2, [pc, #12]	; (91c <event_stop+0x14>)
     910:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
     912:	6011      	str	r1, [r2, #0]
     914:	6398      	str	r0, [r3, #56]	; 0x38
     916:	4770      	bx	lr
     918:	00400380 	.word	0x00400380
     91c:	2f000014 	.word	0x2f000014

00000920 <event_alloc>:
     920:	b570      	push	{r4, r5, r6, lr}
     922:	2118      	movs	r1, #24
     924:	1c06      	adds	r6, r0, #0
     926:	f000 f94b 	bl	bc0 <sark_alloc>
     92a:	4d0b      	ldr	r5, [pc, #44]	; (958 <event_alloc+0x38>)
     92c:	1e04      	subs	r4, r0, #0
     92e:	d00d      	beq.n	94c <event_alloc+0x2c>
     930:	1c31      	adds	r1, r6, #0
     932:	2218      	movs	r2, #24
     934:	f7ff fd6a 	bl	40c <sark_block_init>
     938:	1c06      	adds	r6, r0, #0
     93a:	f7ff ec3c 	blx	1b4 <cpu_int_disable>
     93e:	682a      	ldr	r2, [r5, #0]
     940:	6032      	str	r2, [r6, #0]
     942:	602c      	str	r4, [r5, #0]
     944:	f7ff ec3e 	blx	1c4 <cpu_int_restore>
     948:	2001      	movs	r0, #1
     94a:	e003      	b.n	954 <event_alloc+0x34>
     94c:	696a      	ldr	r2, [r5, #20]
     94e:	2308      	movs	r3, #8
     950:	4313      	orrs	r3, r2
     952:	616b      	str	r3, [r5, #20]
     954:	bd70      	pop	{r4, r5, r6, pc}
     956:	46c0      	nop			; (mov r8, r8)
     958:	00400380 	.word	0x00400380

0000095c <sark_vic_init>:
     95c:	4b0b      	ldr	r3, [pc, #44]	; (98c <sark_vic_init+0x30>)
     95e:	2201      	movs	r2, #1
     960:	4252      	negs	r2, r2
     962:	b510      	push	{r4, lr}
     964:	601a      	str	r2, [r3, #0]
     966:	4b0a      	ldr	r3, [pc, #40]	; (990 <sark_vic_init+0x34>)
     968:	2200      	movs	r2, #0
     96a:	601a      	str	r2, [r3, #0]
     96c:	4b09      	ldr	r3, [pc, #36]	; (994 <sark_vic_init+0x38>)
     96e:	4c0a      	ldr	r4, [pc, #40]	; (998 <sark_vic_init+0x3c>)
     970:	601a      	str	r2, [r3, #0]
     972:	490a      	ldr	r1, [pc, #40]	; (99c <sark_vic_init+0x40>)
     974:	4b0a      	ldr	r3, [pc, #40]	; (9a0 <sark_vic_init+0x44>)
     976:	1e58      	subs	r0, r3, #1
     978:	601a      	str	r2, [r3, #0]
     97a:	38ff      	subs	r0, #255	; 0xff
     97c:	3304      	adds	r3, #4
     97e:	6004      	str	r4, [r0, #0]
     980:	428b      	cmp	r3, r1
     982:	d1f8      	bne.n	976 <sark_vic_init+0x1a>
     984:	4b07      	ldr	r3, [pc, #28]	; (9a4 <sark_vic_init+0x48>)
     986:	4a08      	ldr	r2, [pc, #32]	; (9a8 <sark_vic_init+0x4c>)
     988:	601a      	str	r2, [r3, #0]
     98a:	bd10      	pop	{r4, pc}
     98c:	2f000014 	.word	0x2f000014
     990:	2f00000c 	.word	0x2f00000c
     994:	2f000030 	.word	0x2f000030
     998:	00000104 	.word	0x00000104
     99c:	2f000240 	.word	0x2f000240
     9a0:	2f000200 	.word	0x2f000200
     9a4:	2f000034 	.word	0x2f000034
     9a8:	00000314 	.word	0x00000314

000009ac <sark_vic_set>:
     9ac:	b530      	push	{r4, r5, lr}
     9ae:	3040      	adds	r0, #64	; 0x40
     9b0:	25bc      	movs	r5, #188	; 0xbc
     9b2:	0080      	lsls	r0, r0, #2
     9b4:	05ad      	lsls	r5, r5, #22
     9b6:	1944      	adds	r4, r0, r5
     9b8:	6023      	str	r3, [r4, #0]
     9ba:	4b06      	ldr	r3, [pc, #24]	; (9d4 <sark_vic_set+0x28>)
     9bc:	18c0      	adds	r0, r0, r3
     9be:	2320      	movs	r3, #32
     9c0:	430b      	orrs	r3, r1
     9c2:	6003      	str	r3, [r0, #0]
     9c4:	2a00      	cmp	r2, #0
     9c6:	d004      	beq.n	9d2 <sark_vic_set+0x26>
     9c8:	2301      	movs	r3, #1
     9ca:	408b      	lsls	r3, r1
     9cc:	1c19      	adds	r1, r3, #0
     9ce:	4b02      	ldr	r3, [pc, #8]	; (9d8 <sark_vic_set+0x2c>)
     9d0:	6019      	str	r1, [r3, #0]
     9d2:	bd30      	pop	{r4, r5, pc}
     9d4:	2f000100 	.word	0x2f000100
     9d8:	2f000010 	.word	0x2f000010

000009dc <v2p_mask>:
     9dc:	2300      	movs	r3, #0
     9de:	1c1a      	adds	r2, r3, #0
     9e0:	2101      	movs	r1, #1
     9e2:	b530      	push	{r4, r5, lr}
     9e4:	1c0c      	adds	r4, r1, #0
     9e6:	409c      	lsls	r4, r3
     9e8:	4220      	tst	r0, r4
     9ea:	d005      	beq.n	9f8 <v2p_mask+0x1c>
     9ec:	4d05      	ldr	r5, [pc, #20]	; (a04 <v2p_mask+0x28>)
     9ee:	195c      	adds	r4, r3, r5
     9f0:	7824      	ldrb	r4, [r4, #0]
     9f2:	1c0d      	adds	r5, r1, #0
     9f4:	40a5      	lsls	r5, r4
     9f6:	432a      	orrs	r2, r5
     9f8:	3301      	adds	r3, #1
     9fa:	2b12      	cmp	r3, #18
     9fc:	d1f2      	bne.n	9e4 <v2p_mask+0x8>
     9fe:	1c10      	adds	r0, r2, #0
     a00:	bd30      	pop	{r4, r5, pc}
     a02:	46c0      	nop			; (mov r8, r8)
     a04:	e5007fa8 	.word	0xe5007fa8

00000a08 <rtr_mc_clear>:
     a08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     a0a:	1841      	adds	r1, r0, r1
     a0c:	2280      	movs	r2, #128	; 0x80
     a0e:	1c03      	adds	r3, r0, #0
     a10:	00d2      	lsls	r2, r2, #3
     a12:	2000      	movs	r0, #0
     a14:	4291      	cmp	r1, r2
     a16:	d81b      	bhi.n	a50 <rtr_mc_clear+0x48>
     a18:	4d0e      	ldr	r5, [pc, #56]	; (a54 <rtr_mc_clear+0x4c>)
     a1a:	011c      	lsls	r4, r3, #4
     a1c:	682d      	ldr	r5, [r5, #0]
     a1e:	2601      	movs	r6, #1
     a20:	192c      	adds	r4, r5, r4
     a22:	25ff      	movs	r5, #255	; 0xff
     a24:	009a      	lsls	r2, r3, #2
     a26:	062d      	lsls	r5, r5, #24
     a28:	4276      	negs	r6, r6
     a2a:	1d17      	adds	r7, r2, #4
     a2c:	9701      	str	r7, [sp, #4]
     a2e:	428b      	cmp	r3, r1
     a30:	d20d      	bcs.n	a4e <rtr_mc_clear+0x46>
     a32:	4f09      	ldr	r7, [pc, #36]	; (a58 <rtr_mc_clear+0x50>)
     a34:	3301      	adds	r3, #1
     a36:	50bd      	str	r5, [r7, r2]
     a38:	4f08      	ldr	r7, [pc, #32]	; (a5c <rtr_mc_clear+0x54>)
     a3a:	6065      	str	r5, [r4, #4]
     a3c:	50b8      	str	r0, [r7, r2]
     a3e:	4f08      	ldr	r7, [pc, #32]	; (a60 <rtr_mc_clear+0x58>)
     a40:	60e0      	str	r0, [r4, #12]
     a42:	19d2      	adds	r2, r2, r7
     a44:	6016      	str	r6, [r2, #0]
     a46:	60a6      	str	r6, [r4, #8]
     a48:	9a01      	ldr	r2, [sp, #4]
     a4a:	3410      	adds	r4, #16
     a4c:	e7ed      	b.n	a2a <rtr_mc_clear+0x22>
     a4e:	2001      	movs	r0, #1
     a50:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
     a52:	46c0      	nop			; (mov r8, r8)
     a54:	e5007fd4 	.word	0xe5007fd4
     a58:	e1004000 	.word	0xe1004000
     a5c:	e100c000 	.word	0xe100c000
     a60:	e1008000 	.word	0xe1008000

00000a64 <rtr_mc_init>:
     a64:	b510      	push	{r4, lr}
     a66:	2480      	movs	r4, #128	; 0x80
     a68:	00e4      	lsls	r4, r4, #3
     a6a:	1c21      	adds	r1, r4, #0
     a6c:	2000      	movs	r0, #0
     a6e:	f7ff ffcb 	bl	a08 <rtr_mc_clear>
     a72:	4a09      	ldr	r2, [pc, #36]	; (a98 <rtr_mc_init+0x34>)
     a74:	2101      	movs	r1, #1
     a76:	1c13      	adds	r3, r2, #0
     a78:	33d4      	adds	r3, #212	; 0xd4
     a7a:	32e0      	adds	r2, #224	; 0xe0
     a7c:	681b      	ldr	r3, [r3, #0]
     a7e:	8011      	strh	r1, [r2, #0]
     a80:	2180      	movs	r1, #128	; 0x80
     a82:	2200      	movs	r2, #0
     a84:	01c9      	lsls	r1, r1, #7
     a86:	825a      	strh	r2, [r3, #18]
     a88:	821c      	strh	r4, [r3, #16]
     a8a:	525a      	strh	r2, [r3, r1]
     a8c:	185b      	adds	r3, r3, r1
     a8e:	805a      	strh	r2, [r3, #2]
     a90:	22ff      	movs	r2, #255	; 0xff
     a92:	0612      	lsls	r2, r2, #24
     a94:	605a      	str	r2, [r3, #4]
     a96:	bd10      	pop	{r4, pc}
     a98:	e5007f00 	.word	0xe5007f00

00000a9c <rtr_mc_set>:
     a9c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     a9e:	1c1f      	adds	r7, r3, #0
     aa0:	4b12      	ldr	r3, [pc, #72]	; (aec <rtr_mc_set+0x50>)
     aa2:	1c05      	adds	r5, r0, #0
     aa4:	1c0e      	adds	r6, r1, #0
     aa6:	9201      	str	r2, [sp, #4]
     aa8:	2000      	movs	r0, #0
     aaa:	429d      	cmp	r5, r3
     aac:	d81c      	bhi.n	ae8 <rtr_mc_set+0x4c>
     aae:	4a10      	ldr	r2, [pc, #64]	; (af0 <rtr_mc_set+0x54>)
     ab0:	012b      	lsls	r3, r5, #4
     ab2:	6814      	ldr	r4, [r2, #0]
     ab4:	0238      	lsls	r0, r7, #8
     ab6:	18e4      	adds	r4, r4, r3
     ab8:	2359      	movs	r3, #89	; 0x59
     aba:	781b      	ldrb	r3, [r3, #0]
     abc:	0a02      	lsrs	r2, r0, #8
     abe:	061b      	lsls	r3, r3, #24
     ac0:	18d3      	adds	r3, r2, r3
     ac2:	6063      	str	r3, [r4, #4]
     ac4:	0b80      	lsrs	r0, r0, #14
     ac6:	f7ff ff89 	bl	9dc <v2p_mask>
     aca:	233f      	movs	r3, #63	; 0x3f
     acc:	401f      	ands	r7, r3
     ace:	4b09      	ldr	r3, [pc, #36]	; (af4 <rtr_mc_set+0x58>)
     ad0:	00ad      	lsls	r5, r5, #2
     ad2:	9a01      	ldr	r2, [sp, #4]
     ad4:	0180      	lsls	r0, r0, #6
     ad6:	4307      	orrs	r7, r0
     ad8:	50ef      	str	r7, [r5, r3]
     ada:	4b07      	ldr	r3, [pc, #28]	; (af8 <rtr_mc_set+0x5c>)
     adc:	2001      	movs	r0, #1
     ade:	50ee      	str	r6, [r5, r3]
     ae0:	4b06      	ldr	r3, [pc, #24]	; (afc <rtr_mc_set+0x60>)
     ae2:	60a6      	str	r6, [r4, #8]
     ae4:	50ea      	str	r2, [r5, r3]
     ae6:	60e2      	str	r2, [r4, #12]
     ae8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
     aea:	46c0      	nop			; (mov r8, r8)
     aec:	000003ff 	.word	0x000003ff
     af0:	e5007fd4 	.word	0xe5007fd4
     af4:	e1004000 	.word	0xe1004000
     af8:	e1008000 	.word	0xe1008000
     afc:	e100c000 	.word	0xe100c000

00000b00 <sark_xalloc>:
     b00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     b02:	1c07      	adds	r7, r0, #0
     b04:	1c15      	adds	r5, r2, #0
     b06:	2900      	cmp	r1, #0
     b08:	d054      	beq.n	bb4 <sark_xalloc+0xb4>
     b0a:	2aff      	cmp	r2, #255	; 0xff
     b0c:	d852      	bhi.n	bb4 <sark_xalloc+0xb4>
     b0e:	0a1e      	lsrs	r6, r3, #8
     b10:	0798      	lsls	r0, r3, #30
     b12:	d401      	bmi.n	b18 <sark_xalloc+0x18>
     b14:	2259      	movs	r2, #89	; 0x59
     b16:	7816      	ldrb	r6, [r2, #0]
     b18:	0236      	lsls	r6, r6, #8
     b1a:	1976      	adds	r6, r6, r5
     b1c:	2d00      	cmp	r5, #0
     b1e:	d005      	beq.n	b2c <sark_xalloc+0x2c>
     b20:	4a25      	ldr	r2, [pc, #148]	; (bb8 <sark_xalloc+0xb8>)
     b22:	00b0      	lsls	r0, r6, #2
     b24:	6812      	ldr	r2, [r2, #0]
     b26:	5882      	ldr	r2, [r0, r2]
     b28:	2a00      	cmp	r2, #0
     b2a:	d143      	bne.n	bb4 <sark_xalloc+0xb4>
     b2c:	2203      	movs	r2, #3
     b2e:	3103      	adds	r1, #3
     b30:	4391      	bics	r1, r2
     b32:	2201      	movs	r2, #1
     b34:	3108      	adds	r1, #8
     b36:	4013      	ands	r3, r2
     b38:	9101      	str	r1, [sp, #4]
     b3a:	9300      	str	r3, [sp, #0]
     b3c:	d003      	beq.n	b46 <sark_xalloc+0x46>
     b3e:	2006      	movs	r0, #6
     b40:	f7ff eb44 	blx	1cc <sark_lock_get>
     b44:	4684      	mov	ip, r0
     b46:	683c      	ldr	r4, [r7, #0]
     b48:	2200      	movs	r2, #0
     b4a:	2c00      	cmp	r4, #0
     b4c:	d02b      	beq.n	ba6 <sark_xalloc+0xa6>
     b4e:	9801      	ldr	r0, [sp, #4]
     b50:	6821      	ldr	r1, [r4, #0]
     b52:	1823      	adds	r3, r4, r0
     b54:	42a3      	cmp	r3, r4
     b56:	d926      	bls.n	ba6 <sark_xalloc+0xa6>
     b58:	428b      	cmp	r3, r1
     b5a:	d902      	bls.n	b62 <sark_xalloc+0x62>
     b5c:	1c22      	adds	r2, r4, #0
     b5e:	6864      	ldr	r4, [r4, #4]
     b60:	e7f3      	b.n	b4a <sark_xalloc+0x4a>
     b62:	1c18      	adds	r0, r3, #0
     b64:	3008      	adds	r0, #8
     b66:	4281      	cmp	r1, r0
     b68:	d904      	bls.n	b74 <sark_xalloc+0x74>
     b6a:	6019      	str	r1, [r3, #0]
     b6c:	6861      	ldr	r1, [r4, #4]
     b6e:	6023      	str	r3, [r4, #0]
     b70:	6059      	str	r1, [r3, #4]
     b72:	6063      	str	r3, [r4, #4]
     b74:	6863      	ldr	r3, [r4, #4]
     b76:	2a00      	cmp	r2, #0
     b78:	d001      	beq.n	b7e <sark_xalloc+0x7e>
     b7a:	6053      	str	r3, [r2, #4]
     b7c:	e000      	b.n	b80 <sark_xalloc+0x80>
     b7e:	603b      	str	r3, [r7, #0]
     b80:	9a00      	ldr	r2, [sp, #0]
     b82:	2a00      	cmp	r2, #0
     b84:	d003      	beq.n	b8e <sark_xalloc+0x8e>
     b86:	4660      	mov	r0, ip
     b88:	2106      	movs	r1, #6
     b8a:	f7ff eb32 	blx	1f0 <sark_lock_free>
     b8e:	480b      	ldr	r0, [pc, #44]	; (bbc <sark_xalloc+0xbc>)
     b90:	1833      	adds	r3, r6, r0
     b92:	1c20      	adds	r0, r4, #0
     b94:	6063      	str	r3, [r4, #4]
     b96:	3008      	adds	r0, #8
     b98:	2d00      	cmp	r5, #0
     b9a:	d00c      	beq.n	bb6 <sark_xalloc+0xb6>
     b9c:	4b06      	ldr	r3, [pc, #24]	; (bb8 <sark_xalloc+0xb8>)
     b9e:	00b6      	lsls	r6, r6, #2
     ba0:	681b      	ldr	r3, [r3, #0]
     ba2:	50f0      	str	r0, [r6, r3]
     ba4:	e007      	b.n	bb6 <sark_xalloc+0xb6>
     ba6:	9900      	ldr	r1, [sp, #0]
     ba8:	2900      	cmp	r1, #0
     baa:	d003      	beq.n	bb4 <sark_xalloc+0xb4>
     bac:	4660      	mov	r0, ip
     bae:	2106      	movs	r1, #6
     bb0:	f7ff eb1e 	blx	1f0 <sark_lock_free>
     bb4:	2000      	movs	r0, #0
     bb6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
     bb8:	e5007fdc 	.word	0xe5007fdc
     bbc:	ffff0000 	.word	0xffff0000

00000bc0 <sark_alloc>:
     bc0:	4a04      	ldr	r2, [pc, #16]	; (bd4 <sark_alloc+0x14>)
     bc2:	b508      	push	{r3, lr}
     bc4:	1c03      	adds	r3, r0, #0
     bc6:	6990      	ldr	r0, [r2, #24]
     bc8:	2200      	movs	r2, #0
     bca:	4359      	muls	r1, r3
     bcc:	1c13      	adds	r3, r2, #0
     bce:	f7ff ff97 	bl	b00 <sark_xalloc>
     bd2:	bd08      	pop	{r3, pc}
     bd4:	00400348 	.word	0x00400348

00000bd8 <sark_heap_init>:
     bd8:	1c03      	adds	r3, r0, #0
     bda:	330c      	adds	r3, #12
     bdc:	3908      	subs	r1, #8
     bde:	6043      	str	r3, [r0, #4]
     be0:	6003      	str	r3, [r0, #0]
     be2:	2300      	movs	r3, #0
     be4:	60c1      	str	r1, [r0, #12]
     be6:	6081      	str	r1, [r0, #8]
     be8:	600b      	str	r3, [r1, #0]
     bea:	6103      	str	r3, [r0, #16]
     bec:	604b      	str	r3, [r1, #4]
     bee:	4770      	bx	lr

00000bf0 <io_buf_init>:
     bf0:	b538      	push	{r3, r4, r5, lr}
     bf2:	4d0d      	ldr	r5, [pc, #52]	; (c28 <ETH_RX_SIZE+0x28>)
     bf4:	4b0d      	ldr	r3, [pc, #52]	; (c2c <ETH_RX_SIZE+0x2c>)
     bf6:	6d29      	ldr	r1, [r5, #80]	; 0x50
     bf8:	6818      	ldr	r0, [r3, #0]
     bfa:	3110      	adds	r1, #16
     bfc:	2200      	movs	r2, #0
     bfe:	2301      	movs	r3, #1
     c00:	f7ff ff7e 	bl	b00 <sark_xalloc>
     c04:	1e04      	subs	r4, r0, #0
     c06:	d102      	bne.n	c0e <ETH_RX_SIZE+0xe>
     c08:	200e      	movs	r0, #14
     c0a:	f7ff fa8d 	bl	128 <rt_error>
     c0e:	69eb      	ldr	r3, [r5, #28]
     c10:	6063      	str	r3, [r4, #4]
     c12:	69ab      	ldr	r3, [r5, #24]
     c14:	4a06      	ldr	r2, [pc, #24]	; (c30 <ETH_RX_SIZE+0x30>)
     c16:	041b      	lsls	r3, r3, #16
     c18:	0c1b      	lsrs	r3, r3, #16
     c1a:	60a3      	str	r3, [r4, #8]
     c1c:	2300      	movs	r3, #0
     c1e:	1c20      	adds	r0, r4, #0
     c20:	6023      	str	r3, [r4, #0]
     c22:	6013      	str	r3, [r2, #0]
     c24:	60e3      	str	r3, [r4, #12]
     c26:	bd38      	pop	{r3, r4, r5, pc}
     c28:	e5007f00 	.word	0xe5007f00
     c2c:	e5007fd0 	.word	0xe5007fd0
     c30:	0040000c 	.word	0x0040000c

00000c34 <io_put_char>:
     c34:	b570      	push	{r4, r5, r6, lr}
     c36:	1c0d      	adds	r5, r1, #0
     c38:	2803      	cmp	r0, #3
     c3a:	d907      	bls.n	c4c <io_put_char+0x18>
     c3c:	4932      	ldr	r1, [pc, #200]	; (d08 <io_put_char+0xd4>)
     c3e:	680a      	ldr	r2, [r1, #0]
     c40:	1c53      	adds	r3, r2, #1
     c42:	5485      	strb	r5, [r0, r2]
     c44:	2200      	movs	r2, #0
     c46:	600b      	str	r3, [r1, #0]
     c48:	54c2      	strb	r2, [r0, r3]
     c4a:	e05c      	b.n	d06 <io_put_char+0xd2>
     c4c:	2800      	cmp	r0, #0
     c4e:	d136      	bne.n	cbe <io_put_char+0x8a>
     c50:	4e2e      	ldr	r6, [pc, #184]	; (d0c <io_put_char+0xd8>)
     c52:	6833      	ldr	r3, [r6, #0]
     c54:	2b00      	cmp	r3, #0
     c56:	d11c      	bne.n	c92 <io_put_char+0x5e>
     c58:	2001      	movs	r0, #1
     c5a:	2192      	movs	r1, #146	; 0x92
     c5c:	4081      	lsls	r1, r0
     c5e:	f7ff ffaf 	bl	bc0 <sark_alloc>
     c62:	1e04      	subs	r4, r0, #0
     c64:	d102      	bne.n	c6c <io_put_char+0x38>
     c66:	200e      	movs	r0, #14
     c68:	f7ff fa5e 	bl	128 <rt_error>
     c6c:	2307      	movs	r3, #7
     c6e:	7223      	strb	r3, [r4, #8]
     c70:	2300      	movs	r3, #0
     c72:	7263      	strb	r3, [r4, #9]
     c74:	23ff      	movs	r3, #255	; 0xff
     c76:	72a3      	strb	r3, [r4, #10]
     c78:	4b25      	ldr	r3, [pc, #148]	; (d10 <io_put_char+0xdc>)
     c7a:	889a      	ldrh	r2, [r3, #4]
     c7c:	81a2      	strh	r2, [r4, #12]
     c7e:	4a25      	ldr	r2, [pc, #148]	; (d14 <io_put_char+0xe0>)
     c80:	6812      	ldr	r2, [r2, #0]
     c82:	72e2      	strb	r2, [r4, #11]
     c84:	881b      	ldrh	r3, [r3, #0]
     c86:	81e3      	strh	r3, [r4, #14]
     c88:	2340      	movs	r3, #64	; 0x40
     c8a:	8223      	strh	r3, [r4, #16]
     c8c:	230c      	movs	r3, #12
     c8e:	80a3      	strh	r3, [r4, #4]
     c90:	6034      	str	r4, [r6, #0]
     c92:	6830      	ldr	r0, [r6, #0]
     c94:	8883      	ldrh	r3, [r0, #4]
     c96:	1c5a      	adds	r2, r3, #1
     c98:	18c3      	adds	r3, r0, r3
     c9a:	8082      	strh	r2, [r0, #4]
     c9c:	721d      	strb	r5, [r3, #8]
     c9e:	2d0a      	cmp	r5, #10
     ca0:	d006      	beq.n	cb0 <io_put_char+0x7c>
     ca2:	2d00      	cmp	r5, #0
     ca4:	d004      	beq.n	cb0 <io_put_char+0x7c>
     ca6:	8882      	ldrh	r2, [r0, #4]
     ca8:	2386      	movs	r3, #134	; 0x86
     caa:	005b      	lsls	r3, r3, #1
     cac:	429a      	cmp	r2, r3
     cae:	d12a      	bne.n	d06 <io_put_char+0xd2>
     cb0:	210a      	movs	r1, #10
     cb2:	f7ff fc81 	bl	5b8 <sark_msg_send>
     cb6:	6833      	ldr	r3, [r6, #0]
     cb8:	220c      	movs	r2, #12
     cba:	809a      	strh	r2, [r3, #4]
     cbc:	e023      	b.n	d06 <io_put_char+0xd2>
     cbe:	2802      	cmp	r0, #2
     cc0:	d121      	bne.n	d06 <io_put_char+0xd2>
     cc2:	4e15      	ldr	r6, [pc, #84]	; (d18 <io_put_char+0xe4>)
     cc4:	6833      	ldr	r3, [r6, #0]
     cc6:	2b00      	cmp	r3, #0
     cc8:	d105      	bne.n	cd6 <io_put_char+0xa2>
     cca:	4b12      	ldr	r3, [pc, #72]	; (d14 <io_put_char+0xe0>)
     ccc:	69dc      	ldr	r4, [r3, #28]
     cce:	f7ff ff8f 	bl	bf0 <io_buf_init>
     cd2:	65a0      	str	r0, [r4, #88]	; 0x58
     cd4:	6030      	str	r0, [r6, #0]
     cd6:	4911      	ldr	r1, [pc, #68]	; (d1c <io_put_char+0xe8>)
     cd8:	6834      	ldr	r4, [r6, #0]
     cda:	680a      	ldr	r2, [r1, #0]
     cdc:	1c53      	adds	r3, r2, #1
     cde:	18a2      	adds	r2, r4, r2
     ce0:	600b      	str	r3, [r1, #0]
     ce2:	7415      	strb	r5, [r2, #16]
     ce4:	4a0a      	ldr	r2, [pc, #40]	; (d10 <io_put_char+0xdc>)
     ce6:	6d12      	ldr	r2, [r2, #80]	; 0x50
     ce8:	4293      	cmp	r3, r2
     cea:	d107      	bne.n	cfc <io_put_char+0xc8>
     cec:	60e3      	str	r3, [r4, #12]
     cee:	f7ff ff7f 	bl	bf0 <io_buf_init>
     cf2:	6833      	ldr	r3, [r6, #0]
     cf4:	6020      	str	r0, [r4, #0]
     cf6:	681b      	ldr	r3, [r3, #0]
     cf8:	6033      	str	r3, [r6, #0]
     cfa:	e004      	b.n	d06 <io_put_char+0xd2>
     cfc:	2d0a      	cmp	r5, #10
     cfe:	d001      	beq.n	d04 <io_put_char+0xd0>
     d00:	2d00      	cmp	r5, #0
     d02:	d100      	bne.n	d06 <io_put_char+0xd2>
     d04:	60e3      	str	r3, [r4, #12]
     d06:	bd70      	pop	{r4, r5, r6, pc}
     d08:	00400010 	.word	0x00400010
     d0c:	00400004 	.word	0x00400004
     d10:	e5007f00 	.word	0xe5007f00
     d14:	00400348 	.word	0x00400348
     d18:	00400008 	.word	0x00400008
     d1c:	0040000c 	.word	0x0040000c

00000d20 <io_put_fixed>:
     d20:	b5f0      	push	{r4, r5, r6, r7, lr}
     d22:	b08f      	sub	sp, #60	; 0x3c
     d24:	1c06      	adds	r6, r0, #0
     d26:	9100      	str	r1, [sp, #0]
     d28:	9203      	str	r2, [sp, #12]
     d2a:	2b0c      	cmp	r3, #12
     d2c:	d900      	bls.n	d30 <io_put_fixed+0x10>
     d2e:	230c      	movs	r3, #12
     d30:	9800      	ldr	r0, [sp, #0]
     d32:	1c1d      	adds	r5, r3, #0
     d34:	2200      	movs	r2, #0
     d36:	0400      	lsls	r0, r0, #16
     d38:	0c00      	lsrs	r0, r0, #16
     d3a:	429a      	cmp	r2, r3
     d3c:	d00b      	beq.n	d56 <io_put_fixed+0x36>
     d3e:	210a      	movs	r1, #10
     d40:	4348      	muls	r0, r1
     d42:	3201      	adds	r2, #1
     d44:	0c07      	lsrs	r7, r0, #16
     d46:	3730      	adds	r7, #48	; 0x30
     d48:	46bc      	mov	ip, r7
     d4a:	af07      	add	r7, sp, #28
     d4c:	4254      	negs	r4, r2
     d4e:	18ff      	adds	r7, r7, r3
     d50:	4661      	mov	r1, ip
     d52:	5539      	strb	r1, [r7, r4]
     d54:	e7ef      	b.n	d36 <io_put_fixed+0x16>
     d56:	220a      	movs	r2, #10
     d58:	4350      	muls	r0, r2
     d5a:	2204      	movs	r2, #4
     d5c:	0c00      	lsrs	r0, r0, #16
     d5e:	4282      	cmp	r2, r0
     d60:	4180      	sbcs	r0, r0
     d62:	4240      	negs	r0, r0
     d64:	2200      	movs	r2, #0
     d66:	2730      	movs	r7, #48	; 0x30
     d68:	ac07      	add	r4, sp, #28
     d6a:	2800      	cmp	r0, #0
     d6c:	d00d      	beq.n	d8a <io_put_fixed+0x6a>
     d6e:	429a      	cmp	r2, r3
     d70:	d00a      	beq.n	d88 <io_put_fixed+0x68>
     d72:	5ca0      	ldrb	r0, [r4, r2]
     d74:	2838      	cmp	r0, #56	; 0x38
     d76:	d902      	bls.n	d7e <io_put_fixed+0x5e>
     d78:	54a7      	strb	r7, [r4, r2]
     d7a:	2001      	movs	r0, #1
     d7c:	e002      	b.n	d84 <io_put_fixed+0x64>
     d7e:	3001      	adds	r0, #1
     d80:	54a0      	strb	r0, [r4, r2]
     d82:	2000      	movs	r0, #0
     d84:	3201      	adds	r2, #1
     d86:	e7ef      	b.n	d68 <io_put_fixed+0x48>
     d88:	2001      	movs	r0, #1
     d8a:	2b00      	cmp	r3, #0
     d8c:	d002      	beq.n	d94 <io_put_fixed+0x74>
     d8e:	222e      	movs	r2, #46	; 0x2e
     d90:	1c5d      	adds	r5, r3, #1
     d92:	54e2      	strb	r2, [r4, r3]
     d94:	9f00      	ldr	r7, [sp, #0]
     d96:	0c39      	lsrs	r1, r7, #16
     d98:	1841      	adds	r1, r0, r1
     d9a:	a805      	add	r0, sp, #20
     d9c:	f7ff ea8a 	blx	2b4 <sark_div10>
     da0:	9b06      	ldr	r3, [sp, #24]
     da2:	9905      	ldr	r1, [sp, #20]
     da4:	3330      	adds	r3, #48	; 0x30
     da6:	1c6f      	adds	r7, r5, #1
     da8:	5563      	strb	r3, [r4, r5]
     daa:	2900      	cmp	r1, #0
     dac:	d001      	beq.n	db2 <io_put_fixed+0x92>
     dae:	1c3d      	adds	r5, r7, #0
     db0:	e7f3      	b.n	d9a <io_put_fixed+0x7a>
     db2:	9915      	ldr	r1, [sp, #84]	; 0x54
     db4:	1c3b      	adds	r3, r7, #0
     db6:	2900      	cmp	r1, #0
     db8:	d002      	beq.n	dc0 <io_put_fixed+0xa0>
     dba:	222d      	movs	r2, #45	; 0x2d
     dbc:	1caf      	adds	r7, r5, #2
     dbe:	54e2      	strb	r2, [r4, r3]
     dc0:	9d03      	ldr	r5, [sp, #12]
     dc2:	1c7b      	adds	r3, r7, #1
     dc4:	429d      	cmp	r5, r3
     dc6:	d905      	bls.n	dd4 <io_put_fixed+0xb4>
     dc8:	1c30      	adds	r0, r6, #0
     dca:	9914      	ldr	r1, [sp, #80]	; 0x50
     dcc:	f7ff ff32 	bl	c34 <io_put_char>
     dd0:	3d01      	subs	r5, #1
     dd2:	e7f6      	b.n	dc2 <io_put_fixed+0xa2>
     dd4:	3f01      	subs	r7, #1
     dd6:	5de1      	ldrb	r1, [r4, r7]
     dd8:	1c30      	adds	r0, r6, #0
     dda:	f7ff ff2b 	bl	c34 <io_put_char>
     dde:	2f00      	cmp	r7, #0
     de0:	d1f8      	bne.n	dd4 <io_put_fixed+0xb4>
     de2:	b00f      	add	sp, #60	; 0x3c
     de4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

00000de8 <io_printf>:
     de8:	b40e      	push	{r1, r2, r3}
     dea:	b5f0      	push	{r4, r5, r6, r7, lr}
     dec:	1c04      	adds	r4, r0, #0
     dee:	b08c      	sub	sp, #48	; 0x30
     df0:	2803      	cmp	r0, #3
     df2:	d100      	bne.n	df6 <io_printf+0xe>
     df4:	e144      	b.n	1080 <SV_SIZE+0x80>
     df6:	d903      	bls.n	e00 <io_printf+0x18>
     df8:	4aa4      	ldr	r2, [pc, #656]	; (108c <SV_SIZE+0x8c>)
     dfa:	2300      	movs	r3, #0
     dfc:	7003      	strb	r3, [r0, #0]
     dfe:	6013      	str	r3, [r2, #0]
     e00:	ab12      	add	r3, sp, #72	; 0x48
     e02:	9305      	str	r3, [sp, #20]
     e04:	9811      	ldr	r0, [sp, #68]	; 0x44
     e06:	7801      	ldrb	r1, [r0, #0]
     e08:	2900      	cmp	r1, #0
     e0a:	d100      	bne.n	e0e <io_printf+0x26>
     e0c:	e138      	b.n	1080 <SV_SIZE+0x80>
     e0e:	2925      	cmp	r1, #37	; 0x25
     e10:	d002      	beq.n	e18 <io_printf+0x30>
     e12:	3001      	adds	r0, #1
     e14:	9011      	str	r0, [sp, #68]	; 0x44
     e16:	e05f      	b.n	ed8 <io_printf+0xf0>
     e18:	9b11      	ldr	r3, [sp, #68]	; 0x44
     e1a:	9a11      	ldr	r2, [sp, #68]	; 0x44
     e1c:	7859      	ldrb	r1, [r3, #1]
     e1e:	3202      	adds	r2, #2
     e20:	2900      	cmp	r1, #0
     e22:	d100      	bne.n	e26 <io_printf+0x3e>
     e24:	e12c      	b.n	1080 <SV_SIZE+0x80>
     e26:	2930      	cmp	r1, #48	; 0x30
     e28:	d002      	beq.n	e30 <io_printf+0x48>
     e2a:	2020      	movs	r0, #32
     e2c:	9003      	str	r0, [sp, #12]
     e2e:	e000      	b.n	e32 <io_printf+0x4a>
     e30:	9103      	str	r1, [sp, #12]
     e32:	2700      	movs	r7, #0
     e34:	200a      	movs	r0, #10
     e36:	1c0b      	adds	r3, r1, #0
     e38:	3b30      	subs	r3, #48	; 0x30
     e3a:	061b      	lsls	r3, r3, #24
     e3c:	9211      	str	r2, [sp, #68]	; 0x44
     e3e:	0e1b      	lsrs	r3, r3, #24
     e40:	2b09      	cmp	r3, #9
     e42:	d80a      	bhi.n	e5a <io_printf+0x72>
     e44:	1c03      	adds	r3, r0, #0
     e46:	437b      	muls	r3, r7
     e48:	3201      	adds	r2, #1
     e4a:	1859      	adds	r1, r3, r1
     e4c:	1e53      	subs	r3, r2, #1
     e4e:	1c0f      	adds	r7, r1, #0
     e50:	7819      	ldrb	r1, [r3, #0]
     e52:	3f30      	subs	r7, #48	; 0x30
     e54:	2900      	cmp	r1, #0
     e56:	d1ee      	bne.n	e36 <io_printf+0x4e>
     e58:	e112      	b.n	1080 <SV_SIZE+0x80>
     e5a:	2306      	movs	r3, #6
     e5c:	292e      	cmp	r1, #46	; 0x2e
     e5e:	d113      	bne.n	e88 <io_printf+0xa0>
     e60:	7811      	ldrb	r1, [r2, #0]
     e62:	2300      	movs	r3, #0
     e64:	3201      	adds	r2, #1
     e66:	250a      	movs	r5, #10
     e68:	1c08      	adds	r0, r1, #0
     e6a:	3830      	subs	r0, #48	; 0x30
     e6c:	0600      	lsls	r0, r0, #24
     e6e:	9211      	str	r2, [sp, #68]	; 0x44
     e70:	0e00      	lsrs	r0, r0, #24
     e72:	2809      	cmp	r0, #9
     e74:	d805      	bhi.n	e82 <io_printf+0x9a>
     e76:	436b      	muls	r3, r5
     e78:	185b      	adds	r3, r3, r1
     e7a:	3b30      	subs	r3, #48	; 0x30
     e7c:	7811      	ldrb	r1, [r2, #0]
     e7e:	3201      	adds	r2, #1
     e80:	e7f2      	b.n	e68 <io_printf+0x80>
     e82:	2900      	cmp	r1, #0
     e84:	d100      	bne.n	e88 <io_printf+0xa0>
     e86:	e0fb      	b.n	1080 <SV_SIZE+0x80>
     e88:	296b      	cmp	r1, #107	; 0x6b
     e8a:	d100      	bne.n	e8e <io_printf+0xa6>
     e8c:	e0a8      	b.n	fe0 <RTR_TST2+0xdc>
     e8e:	d80f      	bhi.n	eb0 <io_printf+0xc8>
     e90:	2963      	cmp	r1, #99	; 0x63
     e92:	d01d      	beq.n	ed0 <io_printf+0xe8>
     e94:	d806      	bhi.n	ea4 <io_printf+0xbc>
     e96:	294b      	cmp	r1, #75	; 0x4b
     e98:	d100      	bne.n	e9c <io_printf+0xb4>
     e9a:	e099      	b.n	fd0 <RTR_TST2+0xcc>
     e9c:	2952      	cmp	r1, #82	; 0x52
     e9e:	d100      	bne.n	ea2 <io_printf+0xba>
     ea0:	e096      	b.n	fd0 <RTR_TST2+0xcc>
     ea2:	e019      	b.n	ed8 <io_printf+0xf0>
     ea4:	2964      	cmp	r1, #100	; 0x64
     ea6:	d037      	beq.n	f18 <RTR_TST2+0x14>
     ea8:	2966      	cmp	r1, #102	; 0x66
     eaa:	d100      	bne.n	eae <io_printf+0xc6>
     eac:	e090      	b.n	fd0 <RTR_TST2+0xcc>
     eae:	e013      	b.n	ed8 <io_printf+0xf0>
     eb0:	2975      	cmp	r1, #117	; 0x75
     eb2:	d065      	beq.n	f80 <RTR_TST2+0x7c>
     eb4:	d805      	bhi.n	ec2 <io_printf+0xda>
     eb6:	2972      	cmp	r1, #114	; 0x72
     eb8:	d100      	bne.n	ebc <io_printf+0xd4>
     eba:	e091      	b.n	fe0 <RTR_TST2+0xdc>
     ebc:	2973      	cmp	r1, #115	; 0x73
     ebe:	d00f      	beq.n	ee0 <io_printf+0xf8>
     ec0:	e00a      	b.n	ed8 <io_printf+0xf0>
     ec2:	2978      	cmp	r1, #120	; 0x78
     ec4:	d100      	bne.n	ec8 <io_printf+0xe0>
     ec6:	e09c      	b.n	1002 <SV_SIZE+0x2>
     ec8:	297a      	cmp	r1, #122	; 0x7a
     eca:	d100      	bne.n	ece <io_printf+0xe6>
     ecc:	e0c1      	b.n	1052 <SV_SIZE+0x52>
     ece:	e003      	b.n	ed8 <io_printf+0xf0>
     ed0:	9b05      	ldr	r3, [sp, #20]
     ed2:	6819      	ldr	r1, [r3, #0]
     ed4:	1d1a      	adds	r2, r3, #4
     ed6:	9205      	str	r2, [sp, #20]
     ed8:	1c20      	adds	r0, r4, #0
     eda:	f7ff feab 	bl	c34 <io_put_char>
     ede:	e791      	b.n	e04 <io_printf+0x1c>
     ee0:	9b05      	ldr	r3, [sp, #20]
     ee2:	681d      	ldr	r5, [r3, #0]
     ee4:	1d1a      	adds	r2, r3, #4
     ee6:	1c2b      	adds	r3, r5, #0
     ee8:	9205      	str	r2, [sp, #20]
     eea:	1b5e      	subs	r6, r3, r5
     eec:	3301      	adds	r3, #1
     eee:	1e5a      	subs	r2, r3, #1
     ef0:	7812      	ldrb	r2, [r2, #0]
     ef2:	2a00      	cmp	r2, #0
     ef4:	d1f9      	bne.n	eea <io_printf+0x102>
     ef6:	42b7      	cmp	r7, r6
     ef8:	dd05      	ble.n	f06 <RTR_TST2+0x2>
     efa:	1c20      	adds	r0, r4, #0
     efc:	2120      	movs	r1, #32
     efe:	f7ff fe99 	bl	c34 <io_put_char>
     f02:	3f01      	subs	r7, #1
     f04:	e7f7      	b.n	ef6 <io_printf+0x10e>
     f06:	7829      	ldrb	r1, [r5, #0]
     f08:	2900      	cmp	r1, #0
     f0a:	d100      	bne.n	f0e <RTR_TST2+0xa>
     f0c:	e77a      	b.n	e04 <io_printf+0x1c>
     f0e:	1c20      	adds	r0, r4, #0
     f10:	3501      	adds	r5, #1
     f12:	f7ff fe8f 	bl	c34 <io_put_char>
     f16:	e7f6      	b.n	f06 <RTR_TST2+0x2>
     f18:	9b05      	ldr	r3, [sp, #20]
     f1a:	1d1a      	adds	r2, r3, #4
     f1c:	6819      	ldr	r1, [r3, #0]
     f1e:	9205      	str	r2, [sp, #20]
     f20:	2200      	movs	r2, #0
     f22:	9203      	str	r2, [sp, #12]
     f24:	4291      	cmp	r1, r2
     f26:	da02      	bge.n	f2e <RTR_TST2+0x2a>
     f28:	232d      	movs	r3, #45	; 0x2d
     f2a:	4249      	negs	r1, r1
     f2c:	9303      	str	r3, [sp, #12]
     f2e:	2500      	movs	r5, #0
     f30:	a806      	add	r0, sp, #24
     f32:	f7ff e9c0 	blx	2b4 <sark_div10>
     f36:	3501      	adds	r5, #1
     f38:	ae08      	add	r6, sp, #32
     f3a:	9a07      	ldr	r2, [sp, #28]
     f3c:	1973      	adds	r3, r6, r5
     f3e:	9906      	ldr	r1, [sp, #24]
     f40:	3b01      	subs	r3, #1
     f42:	3230      	adds	r2, #48	; 0x30
     f44:	701a      	strb	r2, [r3, #0]
     f46:	2900      	cmp	r1, #0
     f48:	d1f2      	bne.n	f30 <RTR_TST2+0x2c>
     f4a:	3d01      	subs	r5, #1
     f4c:	5d73      	ldrb	r3, [r6, r5]
     f4e:	2b30      	cmp	r3, #48	; 0x30
     f50:	d101      	bne.n	f56 <RTR_TST2+0x52>
     f52:	2d00      	cmp	r5, #0
     f54:	d1f9      	bne.n	f4a <RTR_TST2+0x46>
     f56:	9803      	ldr	r0, [sp, #12]
     f58:	2800      	cmp	r0, #0
     f5a:	d001      	beq.n	f60 <RTR_TST2+0x5c>
     f5c:	3501      	adds	r5, #1
     f5e:	5570      	strb	r0, [r6, r5]
     f60:	1c6b      	adds	r3, r5, #1
     f62:	429f      	cmp	r7, r3
     f64:	d905      	bls.n	f72 <RTR_TST2+0x6e>
     f66:	1c20      	adds	r0, r4, #0
     f68:	2120      	movs	r1, #32
     f6a:	f7ff fe63 	bl	c34 <io_put_char>
     f6e:	3f01      	subs	r7, #1
     f70:	e7f6      	b.n	f60 <RTR_TST2+0x5c>
     f72:	5d71      	ldrb	r1, [r6, r5]
     f74:	1c20      	adds	r0, r4, #0
     f76:	f7ff fe5d 	bl	c34 <io_put_char>
     f7a:	3d01      	subs	r5, #1
     f7c:	d2f9      	bcs.n	f72 <RTR_TST2+0x6e>
     f7e:	e741      	b.n	e04 <io_printf+0x1c>
     f80:	9b05      	ldr	r3, [sp, #20]
     f82:	2500      	movs	r5, #0
     f84:	6819      	ldr	r1, [r3, #0]
     f86:	1d1a      	adds	r2, r3, #4
     f88:	9205      	str	r2, [sp, #20]
     f8a:	a806      	add	r0, sp, #24
     f8c:	f7ff e992 	blx	2b4 <sark_div10>
     f90:	3501      	adds	r5, #1
     f92:	ae08      	add	r6, sp, #32
     f94:	9a07      	ldr	r2, [sp, #28]
     f96:	1973      	adds	r3, r6, r5
     f98:	9906      	ldr	r1, [sp, #24]
     f9a:	3b01      	subs	r3, #1
     f9c:	3230      	adds	r2, #48	; 0x30
     f9e:	701a      	strb	r2, [r3, #0]
     fa0:	2900      	cmp	r1, #0
     fa2:	d1f2      	bne.n	f8a <RTR_TST2+0x86>
     fa4:	3d01      	subs	r5, #1
     fa6:	5d73      	ldrb	r3, [r6, r5]
     fa8:	2b30      	cmp	r3, #48	; 0x30
     faa:	d101      	bne.n	fb0 <RTR_TST2+0xac>
     fac:	2d00      	cmp	r5, #0
     fae:	d1f9      	bne.n	fa4 <RTR_TST2+0xa0>
     fb0:	1c6b      	adds	r3, r5, #1
     fb2:	429f      	cmp	r7, r3
     fb4:	d905      	bls.n	fc2 <RTR_TST2+0xbe>
     fb6:	1c20      	adds	r0, r4, #0
     fb8:	9903      	ldr	r1, [sp, #12]
     fba:	f7ff fe3b 	bl	c34 <io_put_char>
     fbe:	3f01      	subs	r7, #1
     fc0:	e7f6      	b.n	fb0 <RTR_TST2+0xac>
     fc2:	5d71      	ldrb	r1, [r6, r5]
     fc4:	1c20      	adds	r0, r4, #0
     fc6:	f7ff fe35 	bl	c34 <io_put_char>
     fca:	3d01      	subs	r5, #1
     fcc:	d2f9      	bcs.n	fc2 <RTR_TST2+0xbe>
     fce:	e719      	b.n	e04 <io_printf+0x1c>
     fd0:	9a05      	ldr	r2, [sp, #20]
     fd2:	1d11      	adds	r1, r2, #4
     fd4:	9105      	str	r1, [sp, #20]
     fd6:	6811      	ldr	r1, [r2, #0]
     fd8:	9a03      	ldr	r2, [sp, #12]
     fda:	9200      	str	r2, [sp, #0]
     fdc:	2200      	movs	r2, #0
     fde:	e00a      	b.n	ff6 <RTR_TST2+0xf2>
     fe0:	9a05      	ldr	r2, [sp, #20]
     fe2:	1d11      	adds	r1, r2, #4
     fe4:	6812      	ldr	r2, [r2, #0]
     fe6:	9105      	str	r1, [sp, #20]
     fe8:	17d0      	asrs	r0, r2, #31
     fea:	1811      	adds	r1, r2, r0
     fec:	4041      	eors	r1, r0
     fee:	0049      	lsls	r1, r1, #1
     ff0:	9803      	ldr	r0, [sp, #12]
     ff2:	0fd2      	lsrs	r2, r2, #31
     ff4:	9000      	str	r0, [sp, #0]
     ff6:	9201      	str	r2, [sp, #4]
     ff8:	1c20      	adds	r0, r4, #0
     ffa:	1c3a      	adds	r2, r7, #0
     ffc:	f7ff fe90 	bl	d20 <io_put_fixed>
    1000:	e700      	b.n	e04 <io_printf+0x1c>
    1002:	9b05      	ldr	r3, [sp, #20]
    1004:	2500      	movs	r5, #0
    1006:	1d1a      	adds	r2, r3, #4
    1008:	9205      	str	r2, [sp, #20]
    100a:	681b      	ldr	r3, [r3, #0]
    100c:	220f      	movs	r2, #15
    100e:	ae08      	add	r6, sp, #32
    1010:	4694      	mov	ip, r2
    1012:	3501      	adds	r5, #1
    1014:	4661      	mov	r1, ip
    1016:	481e      	ldr	r0, [pc, #120]	; (1090 <SV_SIZE+0x90>)
    1018:	4019      	ands	r1, r3
    101a:	1972      	adds	r2, r6, r5
    101c:	3a01      	subs	r2, #1
    101e:	5c41      	ldrb	r1, [r0, r1]
    1020:	7011      	strb	r1, [r2, #0]
    1022:	091b      	lsrs	r3, r3, #4
    1024:	d1f5      	bne.n	1012 <SV_SIZE+0x12>
    1026:	3d01      	subs	r5, #1
    1028:	5d73      	ldrb	r3, [r6, r5]
    102a:	2b30      	cmp	r3, #48	; 0x30
    102c:	d101      	bne.n	1032 <SV_SIZE+0x32>
    102e:	2d00      	cmp	r5, #0
    1030:	d1f9      	bne.n	1026 <SV_SIZE+0x26>
    1032:	1c6b      	adds	r3, r5, #1
    1034:	429f      	cmp	r7, r3
    1036:	d905      	bls.n	1044 <SV_SIZE+0x44>
    1038:	1c20      	adds	r0, r4, #0
    103a:	9903      	ldr	r1, [sp, #12]
    103c:	f7ff fdfa 	bl	c34 <io_put_char>
    1040:	3f01      	subs	r7, #1
    1042:	e7f6      	b.n	1032 <SV_SIZE+0x32>
    1044:	5d71      	ldrb	r1, [r6, r5]
    1046:	1c20      	adds	r0, r4, #0
    1048:	f7ff fdf4 	bl	c34 <io_put_char>
    104c:	3d01      	subs	r5, #1
    104e:	d2f9      	bcs.n	1044 <SV_SIZE+0x44>
    1050:	e6d8      	b.n	e04 <io_printf+0x1c>
    1052:	9b05      	ldr	r3, [sp, #20]
    1054:	1e7d      	subs	r5, r7, #1
    1056:	1d1a      	adds	r2, r3, #4
    1058:	9205      	str	r2, [sp, #20]
    105a:	4a0e      	ldr	r2, [pc, #56]	; (1094 <SV_SIZE+0x94>)
    105c:	681e      	ldr	r6, [r3, #0]
    105e:	18bf      	adds	r7, r7, r2
    1060:	00bf      	lsls	r7, r7, #2
    1062:	2d00      	cmp	r5, #0
    1064:	da00      	bge.n	1068 <SV_SIZE+0x68>
    1066:	e6cd      	b.n	e04 <io_printf+0x1c>
    1068:	1c32      	adds	r2, r6, #0
    106a:	40fa      	lsrs	r2, r7
    106c:	4808      	ldr	r0, [pc, #32]	; (1090 <SV_SIZE+0x90>)
    106e:	230f      	movs	r3, #15
    1070:	4013      	ands	r3, r2
    1072:	5cc1      	ldrb	r1, [r0, r3]
    1074:	1c20      	adds	r0, r4, #0
    1076:	f7ff fddd 	bl	c34 <io_put_char>
    107a:	3d01      	subs	r5, #1
    107c:	3f04      	subs	r7, #4
    107e:	e7f0      	b.n	1062 <SV_SIZE+0x62>
    1080:	b00c      	add	sp, #48	; 0x30
    1082:	bcf0      	pop	{r4, r5, r6, r7}
    1084:	bc08      	pop	{r3}
    1086:	b003      	add	sp, #12
    1088:	4718      	bx	r3
    108a:	46c0      	nop			; (mov r8, r8)
    108c:	00400010 	.word	0x00400010
    1090:	0000156b 	.word	0x0000156b
    1094:	3fffffff 	.word	0x3fffffff

00001098 <sark_config>:
    1098:	2201      	movs	r2, #1
    109a:	235a      	movs	r3, #90	; 0x5a
    109c:	701a      	strb	r2, [r3, #0]
    109e:	4770      	bx	lr

000010a0 <spin1_callback_on>:
    10a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    10a2:	4d0f      	ldr	r5, [pc, #60]	; (10e0 <spin1_callback_on+0x40>)
    10a4:	00c4      	lsls	r4, r0, #3
    10a6:	1c03      	adds	r3, r0, #0
    10a8:	1c16      	adds	r6, r2, #0
    10aa:	5161      	str	r1, [r4, r5]
    10ac:	d514      	bpl.n	10d8 <spin1_callback_on+0x38>
    10ae:	490d      	ldr	r1, [pc, #52]	; (10e4 <spin1_callback_on+0x44>)
    10b0:	680a      	ldr	r2, [r1, #0]
    10b2:	4282      	cmp	r2, r0
    10b4:	d005      	beq.n	10c2 <spin1_callback_on+0x22>
    10b6:	1c50      	adds	r0, r2, #1
    10b8:	1c07      	adds	r7, r0, #0
    10ba:	4278      	negs	r0, r7
    10bc:	4178      	adcs	r0, r7
    10be:	2800      	cmp	r0, #0
    10c0:	d004      	beq.n	10cc <spin1_callback_on+0x2c>
    10c2:	4a07      	ldr	r2, [pc, #28]	; (10e0 <spin1_callback_on+0x40>)
    10c4:	600b      	str	r3, [r1, #0]
    10c6:	1914      	adds	r4, r2, r4
    10c8:	6066      	str	r6, [r4, #4]
    10ca:	e007      	b.n	10dc <spin1_callback_on+0x3c>
    10cc:	192c      	adds	r4, r5, r4
    10ce:	6060      	str	r0, [r4, #4]
    10d0:	4905      	ldr	r1, [pc, #20]	; (10e8 <spin1_callback_on+0x48>)
    10d2:	f7ff fe89 	bl	de8 <io_printf>
    10d6:	e001      	b.n	10dc <spin1_callback_on+0x3c>
    10d8:	192c      	adds	r4, r5, r4
    10da:	6062      	str	r2, [r4, #4]
    10dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    10de:	46c0      	nop			; (mov r8, r8)
    10e0:	004005ac 	.word	0x004005ac
    10e4:	00400000 	.word	0x00400000
    10e8:	0000157c 	.word	0x0000157c

000010ec <spin1_send_mc_packet>:
    10ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    10ee:	1c14      	adds	r4, r2, #0
    10f0:	1c06      	adds	r6, r0, #0
    10f2:	1c0d      	adds	r5, r1, #0
    10f4:	f7ff e856 	blx	1a4 <cpu_irq_disable>
    10f8:	2380      	movs	r3, #128	; 0x80
    10fa:	059b      	lsls	r3, r3, #22
    10fc:	2700      	movs	r7, #0
    10fe:	601f      	str	r7, [r3, #0]
    1100:	681a      	ldr	r2, [r3, #0]
    1102:	4b2f      	ldr	r3, [pc, #188]	; (11c0 <spin1_send_mc_packet+0xd4>)
    1104:	0051      	lsls	r1, r2, #1
    1106:	d521      	bpl.n	114c <spin1_send_mc_packet+0x60>
    1108:	685a      	ldr	r2, [r3, #4]
    110a:	2101      	movs	r1, #1
    110c:	4694      	mov	ip, r2
    110e:	448c      	add	ip, r1
    1110:	4661      	mov	r1, ip
    1112:	9201      	str	r2, [sp, #4]
    1114:	220f      	movs	r2, #15
    1116:	400a      	ands	r2, r1
    1118:	6819      	ldr	r1, [r3, #0]
    111a:	428a      	cmp	r2, r1
    111c:	d10a      	bne.n	1134 <spin1_send_mc_packet+0x48>
    111e:	4b29      	ldr	r3, [pc, #164]	; (11c4 <spin1_send_mc_packet+0xd8>)
    1120:	2204      	movs	r2, #4
    1122:	6819      	ldr	r1, [r3, #0]
    1124:	1c3c      	adds	r4, r7, #0
    1126:	430a      	orrs	r2, r1
    1128:	601a      	str	r2, [r3, #0]
    112a:	4b27      	ldr	r3, [pc, #156]	; (11c8 <spin1_send_mc_packet+0xdc>)
    112c:	681a      	ldr	r2, [r3, #0]
    112e:	3201      	adds	r2, #1
    1130:	601a      	str	r2, [r3, #0]
    1132:	e040      	b.n	11b6 <spin1_send_mc_packet+0xca>
    1134:	9901      	ldr	r1, [sp, #4]
    1136:	270c      	movs	r7, #12
    1138:	434f      	muls	r7, r1
    113a:	605a      	str	r2, [r3, #4]
    113c:	19d9      	adds	r1, r3, r7
    113e:	2280      	movs	r2, #128	; 0x80
    1140:	608e      	str	r6, [r1, #8]
    1142:	60cd      	str	r5, [r1, #12]
    1144:	610c      	str	r4, [r1, #16]
    1146:	0112      	lsls	r2, r2, #4
    1148:	4b20      	ldr	r3, [pc, #128]	; (11cc <spin1_send_mc_packet+0xe0>)
    114a:	e027      	b.n	119c <spin1_send_mc_packet+0xb0>
    114c:	6859      	ldr	r1, [r3, #4]
    114e:	681f      	ldr	r7, [r3, #0]
    1150:	3101      	adds	r1, #1
    1152:	220f      	movs	r2, #15
    1154:	4011      	ands	r1, r2
    1156:	42b9      	cmp	r1, r7
    1158:	d113      	bne.n	1182 <spin1_send_mc_packet+0x96>
    115a:	270c      	movs	r7, #12
    115c:	434f      	muls	r7, r1
    115e:	3101      	adds	r1, #1
    1160:	19df      	adds	r7, r3, r7
    1162:	68ba      	ldr	r2, [r7, #8]
    1164:	9201      	str	r2, [sp, #4]
    1166:	68fa      	ldr	r2, [r7, #12]
    1168:	693f      	ldr	r7, [r7, #16]
    116a:	4694      	mov	ip, r2
    116c:	220f      	movs	r2, #15
    116e:	4011      	ands	r1, r2
    1170:	6019      	str	r1, [r3, #0]
    1172:	2f00      	cmp	r7, #0
    1174:	d002      	beq.n	117c <spin1_send_mc_packet+0x90>
    1176:	4a16      	ldr	r2, [pc, #88]	; (11d0 <spin1_send_mc_packet+0xe4>)
    1178:	4667      	mov	r7, ip
    117a:	6017      	str	r7, [r2, #0]
    117c:	4a15      	ldr	r2, [pc, #84]	; (11d4 <spin1_send_mc_packet+0xe8>)
    117e:	9901      	ldr	r1, [sp, #4]
    1180:	6011      	str	r1, [r2, #0]
    1182:	685a      	ldr	r2, [r3, #4]
    1184:	681f      	ldr	r7, [r3, #0]
    1186:	4297      	cmp	r7, r2
    1188:	d10a      	bne.n	11a0 <spin1_send_mc_packet+0xb4>
    118a:	2c00      	cmp	r4, #0
    118c:	d001      	beq.n	1192 <spin1_send_mc_packet+0xa6>
    118e:	4b10      	ldr	r3, [pc, #64]	; (11d0 <spin1_send_mc_packet+0xe4>)
    1190:	601d      	str	r5, [r3, #0]
    1192:	4b10      	ldr	r3, [pc, #64]	; (11d4 <spin1_send_mc_packet+0xe8>)
    1194:	2280      	movs	r2, #128	; 0x80
    1196:	601e      	str	r6, [r3, #0]
    1198:	4b0f      	ldr	r3, [pc, #60]	; (11d8 <spin1_send_mc_packet+0xec>)
    119a:	0112      	lsls	r2, r2, #4
    119c:	601a      	str	r2, [r3, #0]
    119e:	e009      	b.n	11b4 <spin1_send_mc_packet+0xc8>
    11a0:	210c      	movs	r1, #12
    11a2:	4351      	muls	r1, r2
    11a4:	3201      	adds	r2, #1
    11a6:	1859      	adds	r1, r3, r1
    11a8:	608e      	str	r6, [r1, #8]
    11aa:	60cd      	str	r5, [r1, #12]
    11ac:	610c      	str	r4, [r1, #16]
    11ae:	210f      	movs	r1, #15
    11b0:	400a      	ands	r2, r1
    11b2:	605a      	str	r2, [r3, #4]
    11b4:	2401      	movs	r4, #1
    11b6:	f7ff e806 	blx	1c4 <cpu_int_restore>
    11ba:	1c20      	adds	r0, r4, #0
    11bc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    11be:	46c0      	nop			; (mov r8, r8)
    11c0:	004005d4 	.word	0x004005d4
    11c4:	00400014 	.word	0x00400014
    11c8:	00400024 	.word	0x00400024
    11cc:	2f000010 	.word	0x2f000010
    11d0:	20000004 	.word	0x20000004
    11d4:	20000008 	.word	0x20000008
    11d8:	2f000014 	.word	0x2f000014

000011dc <schedule_sysmode>:
    11dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    11de:	4d15      	ldr	r5, [pc, #84]	; (1234 <schedule_sysmode+0x58>)
    11e0:	00c6      	lsls	r6, r0, #3
    11e2:	19ab      	adds	r3, r5, r6
    11e4:	685b      	ldr	r3, [r3, #4]
    11e6:	2b00      	cmp	r3, #0
    11e8:	dc04      	bgt.n	11f4 <schedule_sysmode+0x18>
    11ea:	1c08      	adds	r0, r1, #0
    11ec:	5973      	ldr	r3, [r6, r5]
    11ee:	1c11      	adds	r1, r2, #0
    11f0:	4798      	blx	r3
    11f2:	e01d      	b.n	1230 <schedule_sysmode+0x54>
    11f4:	20c8      	movs	r0, #200	; 0xc8
    11f6:	3b01      	subs	r3, #1
    11f8:	4343      	muls	r3, r0
    11fa:	480f      	ldr	r0, [pc, #60]	; (1238 <schedule_sysmode+0x5c>)
    11fc:	18c3      	adds	r3, r0, r3
    11fe:	685c      	ldr	r4, [r3, #4]
    1200:	200f      	movs	r0, #15
    1202:	1c67      	adds	r7, r4, #1
    1204:	4038      	ands	r0, r7
    1206:	681f      	ldr	r7, [r3, #0]
    1208:	42b8      	cmp	r0, r7
    120a:	d008      	beq.n	121e <schedule_sysmode+0x42>
    120c:	270c      	movs	r7, #12
    120e:	437c      	muls	r4, r7
    1210:	5976      	ldr	r6, [r6, r5]
    1212:	191c      	adds	r4, r3, r4
    1214:	60a6      	str	r6, [r4, #8]
    1216:	60e1      	str	r1, [r4, #12]
    1218:	6122      	str	r2, [r4, #16]
    121a:	6058      	str	r0, [r3, #4]
    121c:	e008      	b.n	1230 <schedule_sysmode+0x54>
    121e:	4b07      	ldr	r3, [pc, #28]	; (123c <schedule_sysmode+0x60>)
    1220:	2201      	movs	r2, #1
    1222:	6819      	ldr	r1, [r3, #0]
    1224:	430a      	orrs	r2, r1
    1226:	601a      	str	r2, [r3, #0]
    1228:	4b05      	ldr	r3, [pc, #20]	; (1240 <schedule_sysmode+0x64>)
    122a:	681a      	ldr	r2, [r3, #0]
    122c:	3201      	adds	r2, #1
    122e:	601a      	str	r2, [r3, #0]
    1230:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1232:	46c0      	nop			; (mov r8, r8)
    1234:	004005ac 	.word	0x004005ac
    1238:	00400028 	.word	0x00400028
    123c:	00400014 	.word	0x00400014
    1240:	00400020 	.word	0x00400020

00001244 <sark_pre_main>:
    1244:	4b48      	ldr	r3, [pc, #288]	; (1368 <sark_pre_main+0x124>)
    1246:	b537      	push	{r0, r1, r2, r4, r5, lr}
    1248:	681b      	ldr	r3, [r3, #0]
    124a:	4a48      	ldr	r2, [pc, #288]	; (136c <sark_pre_main+0x128>)
    124c:	43db      	mvns	r3, r3
    124e:	0fdb      	lsrs	r3, r3, #31
    1250:	7013      	strb	r3, [r2, #0]
    1252:	d048      	beq.n	12e6 <sark_pre_main+0xa2>
    1254:	f7ff fc06 	bl	a64 <rtr_mc_init>
    1258:	4d45      	ldr	r5, [pc, #276]	; (1370 <sark_pre_main+0x12c>)
    125a:	2401      	movs	r4, #1
    125c:	682b      	ldr	r3, [r5, #0]
    125e:	1c21      	adds	r1, r4, #0
    1260:	3306      	adds	r3, #6
    1262:	4099      	lsls	r1, r3
    1264:	1c0b      	adds	r3, r1, #0
    1266:	4262      	negs	r2, r4
    1268:	4942      	ldr	r1, [pc, #264]	; (1374 <sark_pre_main+0x130>)
    126a:	2002      	movs	r0, #2
    126c:	f7ff fc16 	bl	a9c <rtr_mc_set>
    1270:	4b41      	ldr	r3, [pc, #260]	; (1378 <sark_pre_main+0x134>)
    1272:	22ad      	movs	r2, #173	; 0xad
    1274:	701a      	strb	r2, [r3, #0]
    1276:	4b41      	ldr	r3, [pc, #260]	; (137c <sark_pre_main+0x138>)
    1278:	4941      	ldr	r1, [pc, #260]	; (1380 <sark_pre_main+0x13c>)
    127a:	601c      	str	r4, [r3, #0]
    127c:	4b41      	ldr	r3, [pc, #260]	; (1384 <sark_pre_main+0x140>)
    127e:	4a3d      	ldr	r2, [pc, #244]	; (1374 <sark_pre_main+0x130>)
    1280:	601c      	str	r4, [r3, #0]
    1282:	682b      	ldr	r3, [r5, #0]
    1284:	2000      	movs	r0, #0
    1286:	3306      	adds	r3, #6
    1288:	409c      	lsls	r4, r3
    128a:	2301      	movs	r3, #1
    128c:	425b      	negs	r3, r3
    128e:	9400      	str	r4, [sp, #0]
    1290:	f7ff fdaa 	bl	de8 <io_printf>
    1294:	20c8      	movs	r0, #200	; 0xc8
    1296:	f7ff f803 	bl	2a0 <sark_delay_us>
    129a:	4a3b      	ldr	r2, [pc, #236]	; (1388 <sark_pre_main+0x144>)
    129c:	493b      	ldr	r1, [pc, #236]	; (138c <sark_pre_main+0x148>)
    129e:	2300      	movs	r3, #0
    12a0:	6013      	str	r3, [r2, #0]
    12a2:	600b      	str	r3, [r1, #0]
    12a4:	493a      	ldr	r1, [pc, #232]	; (1390 <sark_pre_main+0x14c>)
    12a6:	483b      	ldr	r0, [pc, #236]	; (1394 <sark_pre_main+0x150>)
    12a8:	6008      	str	r0, [r1, #0]
    12aa:	493b      	ldr	r1, [pc, #236]	; (1398 <sark_pre_main+0x154>)
    12ac:	483b      	ldr	r0, [pc, #236]	; (139c <sark_pre_main+0x158>)
    12ae:	600b      	str	r3, [r1, #0]
    12b0:	493b      	ldr	r1, [pc, #236]	; (13a0 <sark_pre_main+0x15c>)
    12b2:	6008      	str	r0, [r1, #0]
    12b4:	493b      	ldr	r1, [pc, #236]	; (13a4 <sark_pre_main+0x160>)
    12b6:	483c      	ldr	r0, [pc, #240]	; (13a8 <sark_pre_main+0x164>)
    12b8:	600b      	str	r3, [r1, #0]
    12ba:	493c      	ldr	r1, [pc, #240]	; (13ac <sark_pre_main+0x168>)
    12bc:	6008      	str	r0, [r1, #0]
    12be:	493c      	ldr	r1, [pc, #240]	; (13b0 <sark_pre_main+0x16c>)
    12c0:	483c      	ldr	r0, [pc, #240]	; (13b4 <sark_pre_main+0x170>)
    12c2:	600b      	str	r3, [r1, #0]
    12c4:	493c      	ldr	r1, [pc, #240]	; (13b8 <sark_pre_main+0x174>)
    12c6:	6008      	str	r0, [r1, #0]
    12c8:	493c      	ldr	r1, [pc, #240]	; (13bc <sark_pre_main+0x178>)
    12ca:	483d      	ldr	r0, [pc, #244]	; (13c0 <sark_pre_main+0x17c>)
    12cc:	600b      	str	r3, [r1, #0]
    12ce:	493d      	ldr	r1, [pc, #244]	; (13c4 <sark_pre_main+0x180>)
    12d0:	6008      	str	r0, [r1, #0]
    12d2:	493d      	ldr	r1, [pc, #244]	; (13c8 <sark_pre_main+0x184>)
    12d4:	483d      	ldr	r0, [pc, #244]	; (13cc <sark_pre_main+0x188>)
    12d6:	600b      	str	r3, [r1, #0]
    12d8:	493d      	ldr	r1, [pc, #244]	; (13d0 <sark_pre_main+0x18c>)
    12da:	6008      	str	r0, [r1, #0]
    12dc:	213f      	movs	r1, #63	; 0x3f
    12de:	6011      	str	r1, [r2, #0]
    12e0:	4a3c      	ldr	r2, [pc, #240]	; (13d4 <sark_pre_main+0x190>)
    12e2:	6013      	str	r3, [r2, #0]
    12e4:	e01f      	b.n	1326 <sark_pre_main+0xe2>
    12e6:	4b3c      	ldr	r3, [pc, #240]	; (13d8 <sark_pre_main+0x194>)
    12e8:	4d3c      	ldr	r5, [pc, #240]	; (13dc <sark_pre_main+0x198>)
    12ea:	6818      	ldr	r0, [r3, #0]
    12ec:	493c      	ldr	r1, [pc, #240]	; (13e0 <sark_pre_main+0x19c>)
    12ee:	1c1c      	adds	r4, r3, #0
    12f0:	6823      	ldr	r3, [r4, #0]
    12f2:	1a1b      	subs	r3, r3, r0
    12f4:	42ab      	cmp	r3, r5
    12f6:	d804      	bhi.n	1302 <sark_pre_main+0xbe>
    12f8:	6e4a      	ldr	r2, [r1, #100]	; 0x64
    12fa:	0613      	lsls	r3, r2, #24
    12fc:	0e1b      	lsrs	r3, r3, #24
    12fe:	2bac      	cmp	r3, #172	; 0xac
    1300:	d9f6      	bls.n	12f0 <sark_pre_main+0xac>
    1302:	4b37      	ldr	r3, [pc, #220]	; (13e0 <sark_pre_main+0x19c>)
    1304:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    1306:	061b      	lsls	r3, r3, #24
    1308:	0e1b      	lsrs	r3, r3, #24
    130a:	2bac      	cmp	r3, #172	; 0xac
    130c:	d80b      	bhi.n	1326 <sark_pre_main+0xe2>
    130e:	4b35      	ldr	r3, [pc, #212]	; (13e4 <sark_pre_main+0x1a0>)
    1310:	2210      	movs	r2, #16
    1312:	6819      	ldr	r1, [r3, #0]
    1314:	2000      	movs	r0, #0
    1316:	430a      	orrs	r2, r1
    1318:	4933      	ldr	r1, [pc, #204]	; (13e8 <sark_pre_main+0x1a4>)
    131a:	601a      	str	r2, [r3, #0]
    131c:	f7ff fd64 	bl	de8 <io_printf>
    1320:	20c8      	movs	r0, #200	; 0xc8
    1322:	f7fe ffbd 	bl	2a0 <sark_delay_us>
    1326:	4b31      	ldr	r3, [pc, #196]	; (13ec <sark_pre_main+0x1a8>)
    1328:	2200      	movs	r2, #0
    132a:	601a      	str	r2, [r3, #0]
    132c:	605a      	str	r2, [r3, #4]
    132e:	609a      	str	r2, [r3, #8]
    1330:	60da      	str	r2, [r3, #12]
    1332:	611a      	str	r2, [r3, #16]
    1334:	615a      	str	r2, [r3, #20]
    1336:	619a      	str	r2, [r3, #24]
    1338:	61da      	str	r2, [r3, #28]
    133a:	621a      	str	r2, [r3, #32]
    133c:	625a      	str	r2, [r3, #36]	; 0x24
    133e:	629a      	str	r2, [r3, #40]	; 0x28
    1340:	4a2b      	ldr	r2, [pc, #172]	; (13f0 <sark_pre_main+0x1ac>)
    1342:	2340      	movs	r3, #64	; 0x40
    1344:	6013      	str	r3, [r2, #0]
    1346:	4a2b      	ldr	r2, [pc, #172]	; (13f4 <sark_pre_main+0x1b0>)
    1348:	492b      	ldr	r1, [pc, #172]	; (13f8 <sark_pre_main+0x1b4>)
    134a:	6011      	str	r1, [r2, #0]
    134c:	4a2b      	ldr	r2, [pc, #172]	; (13fc <sark_pre_main+0x1b8>)
    134e:	2126      	movs	r1, #38	; 0x26
    1350:	6011      	str	r1, [r2, #0]
    1352:	4a2b      	ldr	r2, [pc, #172]	; (1400 <sark_pre_main+0x1bc>)
    1354:	6811      	ldr	r1, [r2, #0]
    1356:	4399      	bics	r1, r3
    1358:	6011      	str	r1, [r2, #0]
    135a:	4a2a      	ldr	r2, [pc, #168]	; (1404 <sark_pre_main+0x1c0>)
    135c:	6013      	str	r3, [r2, #0]
    135e:	233c      	movs	r3, #60	; 0x3c
    1360:	681a      	ldr	r2, [r3, #0]
    1362:	4b29      	ldr	r3, [pc, #164]	; (1408 <sark_pre_main+0x1c4>)
    1364:	601a      	str	r2, [r3, #0]
    1366:	bd37      	pop	{r0, r1, r2, r4, r5, pc}
    1368:	e2000110 	.word	0xe2000110
    136c:	00400458 	.word	0x00400458
    1370:	00400348 	.word	0x00400348
    1374:	0ffff802 	.word	0x0ffff802
    1378:	e5007f64 	.word	0xe5007f64
    137c:	0040041c 	.word	0x0040041c
    1380:	0000174a 	.word	0x0000174a
    1384:	00400420 	.word	0x00400420
    1388:	e100002c 	.word	0xe100002c
    138c:	e1000300 	.word	0xe1000300
    1390:	e1000200 	.word	0xe1000200
    1394:	01fffcff 	.word	0x01fffcff
    1398:	e1000304 	.word	0xe1000304
    139c:	01fffcf1 	.word	0x01fffcf1
    13a0:	e1000204 	.word	0xe1000204
    13a4:	e1000308 	.word	0xe1000308
    13a8:	01fffcf2 	.word	0x01fffcf2
    13ac:	e1000208 	.word	0xe1000208
    13b0:	e100030c 	.word	0xe100030c
    13b4:	01fffcf4 	.word	0x01fffcf4
    13b8:	e100020c 	.word	0xe100020c
    13bc:	e1000310 	.word	0xe1000310
    13c0:	0001fcff 	.word	0x0001fcff
    13c4:	e1000210 	.word	0xe1000210
    13c8:	e1000314 	.word	0xe1000314
    13cc:	0001fcf1 	.word	0x0001fcf1
    13d0:	e1000214 	.word	0xe1000214
    13d4:	0040045c 	.word	0x0040045c
    13d8:	e5007f10 	.word	0xe5007f10
    13dc:	00001387 	.word	0x00001387
    13e0:	e5007f00 	.word	0xe5007f00
    13e4:	00400014 	.word	0x00400014
    13e8:	00001777 	.word	0x00001777
    13ec:	00400428 	.word	0x00400428
    13f0:	2f000014 	.word	0x2f000014
    13f4:	2f00010c 	.word	0x2f00010c
    13f8:	00001478 	.word	0x00001478
    13fc:	2f00020c 	.word	0x2f00020c
    1400:	2f00000c 	.word	0x2f00000c
    1404:	2f000010 	.word	0x2f000010
    1408:	00400424 	.word	0x00400424

0000140c <sark_post_main>:
    140c:	4b06      	ldr	r3, [pc, #24]	; (1428 <sark_post_main+0x1c>)
    140e:	2200      	movs	r2, #0
    1410:	b500      	push	{lr}
    1412:	701a      	strb	r2, [r3, #0]
    1414:	4b05      	ldr	r3, [pc, #20]	; (142c <sark_post_main+0x20>)
    1416:	781b      	ldrb	r3, [r3, #0]
    1418:	4293      	cmp	r3, r2
    141a:	d001      	beq.n	1420 <sark_post_main+0x14>
    141c:	4b04      	ldr	r3, [pc, #16]	; (1430 <sark_post_main+0x24>)
    141e:	681b      	ldr	r3, [r3, #0]
    1420:	4b04      	ldr	r3, [pc, #16]	; (1434 <sark_post_main+0x28>)
    1422:	2240      	movs	r2, #64	; 0x40
    1424:	601a      	str	r2, [r3, #0]
    1426:	bd00      	pop	{pc}
    1428:	e5007f64 	.word	0xe5007f64
    142c:	00400458 	.word	0x00400458
    1430:	e2000190 	.word	0xe2000190
    1434:	2f000010 	.word	0x2f000010

00001438 <cc_rx_ready_isr>:
    1438:	e24ee004 	sub	lr, lr, #4
    143c:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    1440:	e3a03202 	mov	r3, #536870912	; 0x20000000
    1444:	e5932010 	ldr	r2, [r3, #16]
    1448:	e5931014 	ldr	r1, [r3, #20]
    144c:	e59f3020 	ldr	r3, [pc, #32]	; 1474 <cc_rx_ready_isr+0x3c>
    1450:	e5933000 	ldr	r3, [r3]
    1454:	e3530000 	cmp	r3, #0
    1458:	0a000001 	beq	1464 <cc_rx_ready_isr+0x2c>
    145c:	e3a00000 	mov	r0, #0
    1460:	ebfffbac 	bl	318 <schedule>
    1464:	e3a02001 	mov	r2, #1
    1468:	e3a0342f 	mov	r3, #788529152	; 0x2f000000
    146c:	e5832030 	str	r2, [r3, #48]	; 0x30
    1470:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^
    1474:	004005ac 	.word	0x004005ac

00001478 <barrier_packet_handler>:
    1478:	e92d000c 	push	{r2, r3}
    147c:	e3a03202 	mov	r3, #536870912	; 0x20000000
    1480:	e5933014 	ldr	r3, [r3, #20]
    1484:	e283320f 	add	r3, r3, #-268435456	; 0xf0000000
    1488:	e2833b02 	add	r3, r3, #2048	; 0x800
    148c:	e3530003 	cmp	r3, #3
    1490:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
    1494:	ea000018 	b	14fc <barrier_packet_handler+0x84>
    1498:	000014b4 	.word	0x000014b4
    149c:	000014a8 	.word	0x000014a8
    14a0:	000014e4 	.word	0x000014e4
    14a4:	000014ec 	.word	0x000014ec
    14a8:	e3a02001 	mov	r2, #1
    14ac:	e59f305c 	ldr	r3, [pc, #92]	; 1510 <barrier_packet_handler+0x98>
    14b0:	ea000010 	b	14f8 <barrier_packet_handler+0x80>
    14b4:	e59f3058 	ldr	r3, [pc, #88]	; 1514 <barrier_packet_handler+0x9c>
    14b8:	e5933004 	ldr	r3, [r3, #4]
    14bc:	e3530000 	cmp	r3, #0
    14c0:	e3a0342f 	mov	r3, #788529152	; 0x2f000000
    14c4:	b593200c 	ldrlt	r2, [r3, #12]
    14c8:	a59f2048 	ldrge	r2, [pc, #72]	; 1518 <barrier_packet_handler+0xa0>
    14cc:	b3822040 	orrlt	r2, r2, #64	; 0x40
    14d0:	b583200c 	strlt	r2, [r3, #12]
    14d4:	a583210c 	strge	r2, [r3, #268]	; 0x10c
    14d8:	e3a02001 	mov	r2, #1
    14dc:	e59f3038 	ldr	r3, [pc, #56]	; 151c <barrier_packet_handler+0xa4>
    14e0:	ea000004 	b	14f8 <barrier_packet_handler+0x80>
    14e4:	e59f3034 	ldr	r3, [pc, #52]	; 1520 <barrier_packet_handler+0xa8>
    14e8:	ea000000 	b	14f0 <barrier_packet_handler+0x78>
    14ec:	e59f3030 	ldr	r3, [pc, #48]	; 1524 <barrier_packet_handler+0xac>
    14f0:	e5932000 	ldr	r2, [r3]
    14f4:	e2822001 	add	r2, r2, #1
    14f8:	e5832000 	str	r2, [r3]
    14fc:	e3a02001 	mov	r2, #1
    1500:	e3a0342f 	mov	r3, #788529152	; 0x2f000000
    1504:	e5832030 	str	r2, [r3, #48]	; 0x30
    1508:	e8bd000c 	pop	{r2, r3}
    150c:	e25ef004 	subs	pc, lr, #4
    1510:	00400018 	.word	0x00400018
    1514:	004005ac 	.word	0x004005ac
    1518:	00001438 	.word	0x00001438
    151c:	0040001c 	.word	0x0040001c
    1520:	0040041c 	.word	0x0040041c
    1524:	00400420 	.word	0x00400420

00001528 <__gnu_fractunssasi>:
    1528:	e3500000 	cmp	r0, #0
    152c:	a3a03000 	movge	r3, #0
    1530:	aa000002 	bge	1540 <__gnu_fractunssasi+0x18>
    1534:	e1b03880 	lsls	r3, r0, #17
    1538:	03a03000 	moveq	r3, #0
    153c:	13a03001 	movne	r3, #1
    1540:	e08307c0 	add	r0, r3, r0, asr #15
    1544:	e12fff1e 	bx	lr

00001548 <build_date>:
    1548:	53028c1f                                ...S

0000154c <build_name>:
    154c:	656d6964 6f69736e 6f735f6e 00637275     dimension_sourc.
    155c:	4b524153 6970532f 6b614e4e 30007265              SARK/SpiNNaker.

0000156b <hex>:
    156b:	33323130 37363534 62613938 66656463     0123456789abcdef
    157b:	5b090900 5f697061 6e726177 6177205d     ...[api_warn] wa
    158b:	6e696e72 74203a67 6d206f6f 20796e61     rning: too many 
    159b:	20514946 6e657665 28207374 25206425     FIQ events (%d %
    15ab:	000a2964 615b0909 775f6970 5d6e7261     d)....[api_warn]
    15bb:	72617720 676e696e 6174203a 71206b73      warning: task q
    15cb:	65756575 6c756620 2528206c 000a2975     ueue full (%u)..
    15db:	615b0909 775f6970 5d6e7261 72617720     ..[api_warn] war
    15eb:	676e696e 4d44203a 75712041 20657565     ning: DMA queue 
    15fb:	6c6c7566 75252820 09000a29 70615b09     full (%u)....[ap
    160b:	61775f69 205d6e72 6e726177 3a676e69     i_warn] warning:
    161b:	63617020 2074656b 75657571 75662065      packet queue fu
    162b:	28206c6c 0a297525 5b090900 5f697061     ll (%u)....[api_
    163b:	6e726177 6177205d 6e696e72 66203a67     warn] warning: f
    164b:	656c6961 6f742064 6e797320 6f726863     ailed to synchro
    165b:	6573696e 64252820 2964252f 64252820     nise (%d/%d) (%d
    166b:	2964252f 09000a2e 70615b09 61775f69     /%d).....[api_wa
    167b:	205d6e72 6e726177 3a676e69 69616620     rn] warning: fai
    168b:	2064656c 73206f74 68636e79 696e6f72     led to synchroni
    169b:	28206573 252f6425 0a2e2964 5b090900     se (%d/%d).....[
    16ab:	5f697061 6e726177 6177205d 6e696e72     api_warn] warnin
    16bb:	73203a67 68636e79 696e6f72 69746173     g: synchronisati
    16cb:	66206e6f 656c6961 72282064 6f677964     on failed (rdygo
    16db:	000a2e29 615b0909 775f6970 5d6e7261     ).....[api_warn]
    16eb:	72617720 676e696e 7973203a 7268636e      warning: synchr
    16fb:	73696e6f 6f697461 6166206e 64656c69     onisation failed
    170b:	6f6c2820 2e296b63 0909000a 6970615b      (lock).....[api
    171b:	7261775f 77205d6e 696e7261 203a676e     _warn] warning: 
    172b:	636e7973 6e6f7268 74617369 206e6f69     synchronisation 
    173b:	656d6974 2074756f 296f6728 09000a2e     timeout (go)....
    174b:	70615b09 65645f69 5d677562 59445220     .[api_debug] RDY
    175b:	6b203a31 25783020 6d207a38 25783020     1: k 0x%8z m 0x%
    176b:	72207a38 25783020 000a7a38 615b0909     8z r 0x%8z....[a
    177b:	775f6970 5d6e7261 72617720 676e696e     pi_warn] warning
    178b:	6177203a 6e697469 6f662067 6f722072     : waiting for ro
    179b:	72657475 696e6920 61662074 64656c69     uter init failed
    17ab:	00000a2e                                         ...
